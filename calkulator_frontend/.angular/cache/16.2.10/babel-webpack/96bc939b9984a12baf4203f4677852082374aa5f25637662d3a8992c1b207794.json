{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_div_9_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 12);\n  }\n  if (rf & 2) {\n    const j_r7 = ctx.index;\n    i0.ɵɵproperty(\"formControlName\", j_r7);\n  }\n}\nfunction MatrixComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10);\n    i0.ɵɵtemplate(2, MatrixComponent_div_9_input_2_Template, 1, 1, \"input\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getColumns(row_r3).controls);\n  }\n}\nfunction MatrixComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r9 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"coefficient-\", i_r9, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Coefficient \", i_r9 + 1, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"coefficient-\", i_r9, \"\");\n  }\n}\nfunction MatrixComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r11 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"ordinate-\", i_r11, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Ordinate \", i_r11 + 1, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"ordinate-\", i_r11, \"\");\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, fbuilder, formb, apiService) {\n    this.fb = fb;\n    this.fbuilder = fbuilder;\n    this.formb = formb;\n    this.apiService = apiService;\n    this.degree = 0;\n    this.numberOfRows = 3;\n    this.numberOfColumns = 4;\n    this.profileForm = this.formb.group({\n      degree: ['']\n    });\n    this.n = 0;\n  }\n  ngOnInit() {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n  }\n  onSubmit1() {\n    const formData = this.profileForm.value;\n    this.apiService.postDegreeData(formData).subscribe({\n      next: response => console.log('Response:', response),\n      error: error => console.error('Error:', error)\n    });\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 21,\n    vars: 6,\n    consts: [[\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"degree\"], [\"type\", \"number\", \"formControlName\", \"degree\", \"name\", \"degree\", \"placeholder\", \"degree here\"], [3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"matrix\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [\"formArrayName\", \"coefficients\"], [\"formArrayName\", \"ordinates\"], [3, \"formGroupName\"], [\"formArrayName\", \"columns\"], [\"type\", \"text\", 3, \"formControlName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"formControlName\"], [3, \"for\"], [\"type\", \"number\", \"formControlName\", \"i\", 3, \"id\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Hello, here is the matrix form:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit1();\n        });\n        i0.ɵɵelement(3, \"label\", 1)(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"button\");\n        i0.ɵɵtext(6, \"Submit degree\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtemplate(9, MatrixComponent_div_9_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13, \"here is matrixForm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(15, \"div\", 7);\n        i0.ɵɵtemplate(16, MatrixComponent_div_16_Template, 4, 4, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵtemplate(18, MatrixComponent_div_18_Template, 4, 4, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 6);\n        i0.ɵɵtext(20, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.matrix.controls);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.matrixForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.matrixControls);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.matrixControls);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelement","ɵɵproperty","j_r7","ɵɵelementStart","ɵɵtemplate","MatrixComponent_div_9_input_2_Template","ɵɵelementEnd","i_r4","ɵɵadvance","ctx_r0","getColumns","row_r3","controls","ɵɵtext","i_r9","ɵɵpropertyInterpolate1","ɵɵtextInterpolate1","i_r11","MatrixComponent","constructor","fb","fbuilder","formb","apiService","degree","numberOfRows","numberOfColumns","profileForm","group","n","ngOnInit","degreeForm","required","onSubmit1","formData","value","postDegreeData","subscribe","next","response","console","log","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","ɵɵlistener","MatrixComponent_Template_form_ngSubmit_2_listener","MatrixComponent_Template_form_ngSubmit_7_listener","onSubmit","MatrixComponent_div_9_Template","MatrixComponent_Template_form_ngSubmit_14_listener","MatrixComponent_div_16_Template","MatrixComponent_div_18_Template","myForm","matrix","matrixForm","matrixControls"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl,  Validators } from '@angular/forms';\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-matrix',\n  templateUrl: './matrix.component.html',\n  styleUrls: ['./matrix.component.scss']\n})\n\nexport class MatrixComponent implements OnInit {\n \n  degreeForm!: FormGroup;\n  degree:number=0; \n  numberOfRows: number = 3; \n  numberOfColumns: number = 4;\n\n\n  profileForm = this.formb.group({\n    degree: [''],\n    \n  });\n\n  \n\n\n\n  constructor(private fb: FormBuilder, private fbuilder:FormBuilder,  private formb: FormBuilder, private apiService: ApiService) {\n    \n  }\n\n  n:number = 0  \n  ngOnInit(): void {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n\n  }\n  \n\n    onSubmit1(): void {\n      const formData = this.profileForm.value;\n      this.apiService.postDegreeData(formData).subscribe({\n        next:response => console.log('Response:', response),\n        error: error => console.error('Error:', error)\n      });\n    }\n\n\n\n}\n\n","<p>Hello, here is the matrix form:</p>\n<form  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit1()\" novalidate>\n    <label name= \"degree\"></label>\n    <input type=\"number\" formControlName = \"degree\" name=\"degree\" placeholder=\"degree here\">\n    <button>Submit degree</button>\n</form>\n\n<form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n    <div formArrayName=\"matrix\">\n      <div *ngFor=\"let row of matrix.controls; let i = index\" [formGroupName]=\"i\">\n        <div formArrayName =\"columns\">\n          <input *ngFor=\"let columnCtrl of getColumns(row).controls; let j = index\" type=\"text\" [formControlName]=\"j\">\n        </div>\n       </div>\n    </div>\n    <button type=\"submit\">Submit</button>\n</form>\n  \n  \n\n <!-- <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <input type=\"number\" formControlName = \"degree\" placeholder=\"degree here\">\n    <button type=\"submit\">Submit degree two</button>\n</form> -->\n\n<!-- <form  [formGroup] = \"degreeForm\" (ngSubmit)=\"onSubmitEquationsDegree()\">\n    <label name= \"degree\"></label>\n    <input type=\"number\" [formControlName] = \"degree\" name=\"degree\" placeholder=\"number of equations\">\n    <button type=\"submit\" >Accept</button>\n</form> -->\n\n<!-- <div formArrayName=\"matrix\">\n    <div *ngFor=\"let row of matrixControls; let i = index\" [formGroupName]=\"i\">\n       \n    </div>\n</div>  -->\n\n<p>here is matrixForm</p>\n<form [formGroup]=\"matrixForm\" (ngSubmit)=\"onSubmit()\">\n    <div formArrayName=\"coefficients\">\n      <div *ngFor=\"let coefficient of matrixControls; let i=index\" [formGroupName]=\"i\">\n        <label for=\"coefficient-{{i}}\">Coefficient {{i + 1}}:</label>\n        <input type=\"number\" id=\"coefficient-{{i}}\" formControlName=\"i\">\n      </div>\n    </div>\n  \n    <div formArrayName=\"ordinates\">\n      <div *ngFor=\"let ordinate of matrixControls; let i=index\" [formGroupName]=\"i\">\n        <label for=\"ordinate-{{i}}\">Ordinate {{i + 1}}:</label>\n        <input type=\"number\" id=\"ordinate-{{i}}\" formControlName=\"i\">\n      </div>\n    </div>\n  \n    <button type=\"submit\">Submit</button>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}