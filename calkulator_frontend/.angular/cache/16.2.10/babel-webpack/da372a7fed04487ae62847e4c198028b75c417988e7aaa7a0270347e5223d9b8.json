{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r2);\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, apiService) {\n    this.fb = fb;\n    this.apiService = apiService;\n    this.n = 0;\n    this.coefitients = [1, 2, 3, 1, 1, 1, 1, 1, 1, 1];\n    this.ordinates = [4, 5, 1, 1, 1, 1, 1, 1, 1, 1];\n    this.degreeForm = new FormGroup({\n      degree: new FormControl('')\n    });\n  }\n  ngOnInit() {}\n  addColumn() {}\n  addRow() {}\n  addOrdinate() {}\n  onSubmitEquationsDegree() {}\n  onSubmit() {\n    const formData = this.matrixForm.getRawValue();\n    const payload = {\n      coefficients: formData.matrix,\n      ordinates: formData.ordinates\n    };\n    this.apiService.postMatrixData(payload).subscribe({\n      next: response => {\n        console.log('Response:', response);\n      },\n      error: error => console.error('Error Response:', error)\n    });\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"matrix\"], [\"type\", \"button\", 3, \"click\"], [\"formArrayName\", \"ordinates\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [\"type\", \"number\", 3, \"formControlName\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Hello, here is the matrix form:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function MatrixComponent_Template_button_click_4_listener() {\n          return ctx.addColumn();\n        });\n        i0.ɵɵtext(5, \"Add Column\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function MatrixComponent_Template_button_click_6_listener() {\n          return ctx.addRow();\n        });\n        i0.ɵɵtext(7, \"Add Row\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵtemplate(9, MatrixComponent_div_9_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function MatrixComponent_Template_button_click_10_listener() {\n          return ctx.addOrdinate();\n        });\n        i0.ɵɵtext(11, \"Add Ordinate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 5);\n        i0.ɵɵtext(13, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.matrixForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ordinatesControls);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","i_r2","MatrixComponent","constructor","fb","apiService","n","coefitients","ordinates","degreeForm","degree","ngOnInit","addColumn","addRow","addOrdinate","onSubmitEquationsDegree","onSubmit","formData","matrixForm","getRawValue","payload","coefficients","matrix","postMatrixData","subscribe","next","response","console","log","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","ɵɵtext","ɵɵlistener","MatrixComponent_Template_form_ngSubmit_2_listener","MatrixComponent_Template_button_click_4_listener","MatrixComponent_Template_button_click_6_listener","ɵɵtemplate","MatrixComponent_div_9_Template","MatrixComponent_Template_button_click_10_listener","ordinatesControls"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl  } from '@angular/forms';\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-matrix',\n  templateUrl: './matrix.component.html',\n  styleUrls: ['./matrix.component.scss']\n})\n\nexport class MatrixComponent implements OnInit {\n  matrixForm!: FormGroup;\n  degreeForm!: FormGroup;\n\n  constructor(private fb: FormBuilder, private apiService: ApiService) {\n\n    this.degreeForm = new FormGroup ({\n      degree: new FormControl('')\n    });\n  }\n  n:number = 0  \n  ngOnInit(): void {}\n  coefitients=[1,2,3,1,1,1,1,1,1,1]\n  ordinates=  [4,5,1,1,1,1,1,1,1,1]\n  \n\n  \n  addColumn(){}\n  addRow(){}\n  addOrdinate(){}\n\n  onSubmitEquationsDegree() { }\n  \n  \n  onSubmit(): void {\n      \n      const formData = this.matrixForm.getRawValue();\n      const payload = {\n        coefficients: formData.matrix,\n        ordinates: formData.ordinates\n      };\n      \n    \n      this.apiService.postMatrixData(payload).subscribe({\n\n      \n        next: response => {\n          console.log('Response:', response)\n        },\n        error: error => console.error('Error Response:', error)\n      });\n    }\n\n  }\n\n  ","<p>Hello, here is the matrix form:</p>\n<form [formGroup]=\"matrixForm\" (ngSubmit)=\"onSubmit()\">\n    <!-- Matrix fields -->\n    <div formArrayName=\"matrix\">\n      <!-- Existing matrix rows and columns -->\n    </div>\n    <button type=\"button\" (click)=\"addColumn()\">Add Column</button>\n    <button type=\"button\" (click)=\"addRow()\">Add Row</button>\n  \n    <!-- Ordinates fields -->\n    <div formArrayName=\"ordinates\">\n        <div *ngFor=\"let ordinate of ordinatesControls; let i=index\">\n            <input type=\"number\" [formControlName]=\"i\">\n          </div>\n    </div>\n    <button type=\"button\" (click)=\"addOrdinate()\">Add Ordinate</button>\n  \n    <!-- Submit button -->\n    <button type=\"submit\">Submit</button>\n  </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}