{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_div_10_div_1_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 26);\n  }\n}\nfunction MatrixComponent_div_10_div_1_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Cell is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_10_div_1_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only numbers are allowed!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_10_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, MatrixComponent_div_10_div_1_div_5_div_1_Template, 1, 0, \"div\", 24);\n    i0.ɵɵtemplate(2, MatrixComponent_div_10_div_1_div_5_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(3, MatrixComponent_div_10_div_1_div_5_div_3_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r7 = i0.ɵɵnextContext().index;\n    const i_r4 = i0.ɵɵnextContext().index;\n    const ctx_r8 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r8.matrixForm.get(\"cell\" + i_r4 + \"_\" + j_r7)) == null ? null : tmp_0_0.invalid) && (((tmp_0_0 = ctx_r8.matrixForm.get(\"cell\" + i_r4 + \"_\" + j_r7)) == null ? null : tmp_0_0.dirty) || ((tmp_0_0 = ctx_r8.matrixForm.get(\"cell\" + i_r4 + \"_\" + j_r7)) == null ? null : tmp_0_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r8.matrixForm.get(\"cell\" + i_r4 + \"_\" + j_r7)) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r8.matrixForm.get(\"cell\" + i_r4 + \"_\" + j_r7)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n  }\n}\nfunction MatrixComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵelement(2, \"input\", 20);\n    i0.ɵɵelementStart(3, \"label\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, MatrixComponent_div_10_div_1_div_5_Template, 4, 3, \"div\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const j_r7 = ctx.index;\n    const i_r4 = i0.ɵɵnextContext().index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"cell\" + i_r4 + \"_\" + j_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" x\", j_r7 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r5.matrixForm.get(\"cell\" + i_r4 + \"_\" + j_r7)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n  }\n}\nfunction MatrixComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, MatrixComponent_div_10_div_1_Template, 6, 3, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.cols);\n  }\n}\nfunction MatrixComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.matrixForm.errors == null ? null : ctx_r1.matrixForm.errors[\"backend\"], \" \");\n  }\n}\nfunction MatrixComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelement(1, \"input\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r16 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", \"ordin\" + i_r16);\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, fbuilder, formb, formbOrdinates, apiService) {\n    this.fb = fb;\n    this.fbuilder = fbuilder;\n    this.formb = formb;\n    this.formbOrdinates = formbOrdinates;\n    this.apiService = apiService;\n    this.degree = 0;\n    this.rows = Array(4);\n    this.cols = Array(4);\n    // ordinatesForm!: FormGroup;\n    this.profileForm = this.formb.group({\n      degree: ['']\n    });\n    this.matrixform = this.formb.group({\n      row: this.formb.array([])\n    });\n    this.ordinatesForm = this.formbOrdinates.group({\n      row: this.formbOrdinates.array([])\n    });\n    this.n = 0;\n  }\n  ngOnInit() {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        const controlName = `cell${i}_${j}`;\n        this.matrixForm.addControl(controlName, new FormControl('', [Validators.required, Validators.pattern(/^\\d*\\.?\\d+$/) // Only numeric values alowed \n        ]));\n      }\n    }\n\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < 4; i++) {\n      {\n        this.ordinatesForm.addControl('ordin' + i, new FormControl(''));\n      }\n    }\n  }\n  onSubmit1() {\n    const formData = this.profileForm.value;\n    this.apiService.postDegreeData(formData).subscribe({\n      next: response => console.log('ResponseDegree:', response),\n      error: error => console.error('Error:', error)\n    });\n  }\n  submitMatrixForm() {\n    const matrixData = this.matrixForm.value;\n    console.log(this.matrixForm.value);\n    if (this.matrixForm.valid) {\n      // Process the valid form data\n      this.apiService.postMatrixData(matrixData).subscribe({\n        next: response => console.log('ResponseMatrix:', response),\n        error: error => {\n          console.log('error in submiting matrix -', error);\n          this.matrixForm.setErrors({\n            'backend': error.error.error\n          });\n        }\n      });\n    } else {\n      this.matrixForm.markAllAsTouched();\n      console.log('Invalid matrix');\n    }\n  }\n  submitOrdinatesForm() {\n    const ordinatesData = this.ordinatesForm.value;\n    console.log(this.ordinatesForm.value);\n    this.apiService.postOrdinatesData(ordinatesData).subscribe({\n      next: response => console.log('ResponseOrdinates:', response),\n      error: error => console.error('Error:', error)\n    });\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 19,\n    vars: 6,\n    consts: [[1, \"forms-container\"], [1, \"form-profile\"], [\"novalidate\", \"\", 1, \"profile\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"degree\"], [\"type\", \"number\", \"formControlName\", \"degree\", \"name\", \"degree\", \"placeholder\", \"degree here\", 1, \"form-control\", \"round\"], [1, \"btn\", \"btn-secondary\"], [1, \"form-matrix\"], [1, \"rounded\", 3, \"formGroup\", \"ngSubmit\"], [1, \"formWithButton\"], [\"class\", \"matrix-row\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-dark error-message\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"buttonwidth\"], [1, \"form-ordinates\"], [1, \"ordinates-row\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"form-control rounded ordinates-cell\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"matrix-row\"], [\"class\", \"matrix-cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"matrix-cell\"], [1, \"cell-container\"], [\"type\", \"number\", \"id\", \"cell\", \"required\", \"\", 1, \"form-control\", 3, \"formControlName\"], [\"for\", \"cell\", 1, \"badge\", \"bg-secondary\", \"bgcell\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-dark\", \"error-message\"], [1, \"form-control\", \"rounded\", \"ordinates-cell\"], [\"type\", \"number\", \"required\", \"\", 1, \"rounded\", \"input-ordinate\", 3, \"formControlName\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit1();\n        });\n        i0.ɵɵelement(3, \"label\", 3)(4, \"input\", 4);\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵtext(6, \"Enter\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitMatrixForm();\n        });\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵtemplate(10, MatrixComponent_div_10_Template, 2, 1, \"div\", 9);\n        i0.ɵɵtemplate(11, MatrixComponent_div_11_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementStart(12, \"button\", 11);\n        i0.ɵɵtext(13, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"form\", 13);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.submitOrdinatesForm();\n        });\n        i0.ɵɵtemplate(16, MatrixComponent_div_16_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementStart(17, \"button\", 15);\n        i0.ɵɵtext(18, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.matrixForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.matrixForm.errors == null ? null : ctx.matrixForm.errors[\"backend\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.ordinatesForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rows);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background-color: rgb(2, 14, 24);\\n}\\n\\ninput[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  background-color: rgba(125, 138, 167, 0.4);\\n}\\n\\nbadge[_ngcontent-%COMP%] {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.bgcell[_ngcontent-%COMP%] {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.profile[_ngcontent-%COMP%] {\\n  max-width: 12%;\\n  margin-bottom: 2%;\\n  margin-top: 2%;\\n}\\n\\n.forms-container[_ngcontent-%COMP%] {\\n  margin-top: 1%;\\n  margin-left: 1%;\\n  margin-bottom: 0;\\n  margin-right: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.form-profile[_ngcontent-%COMP%] {\\n  width: 25%;\\n}\\n\\n.form-matrix[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.form-ordinates[_ngcontent-%COMP%] {\\n  width: 20%;\\n}\\n\\n.matrix-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 2%;\\n}\\n\\n.matrix-cell[_ngcontent-%COMP%] {\\n  margin: 0 1%;\\n  width: 15%;\\n  border-style: solid blue;\\n}\\n\\n.cell-container[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.ordinates-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 40%;\\n}\\n\\n.ordinates-cell[_ngcontent-%COMP%] {\\n  background-color: rgba(255, 255, 255, 0.3);\\n  margin-top: 10%;\\n  margin-bottom: 10%;\\n  padding: 0;\\n}\\n\\n.input-ordinate[_ngcontent-%COMP%] {\\n  background-color: rgba(230, 231, 168, 0.6);\\n  width: 100%;\\n}\\n\\n.formWithButton[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n}\\n\\n.buttonwidth[_ngcontent-%COMP%] {\\n  width: 20%;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  margin: 3%;\\n  color: rgb(155, 8, 8);\\n  background-color: chocolate;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWF0cml4L21hdHJpeC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGdDQUFBO0FBQUY7O0FBR0E7O0VBRUUsd0JBQUE7RUFDQSxTQUFBO0FBQUY7O0FBR0E7RUFDSSwwQ0FBQTtBQUFKOztBQUdBO0VBQ0Msa0JBQUE7RUFDQSxtQkFBQTtBQUFEOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFFQTtFQUVBLFVBQUE7QUFBQTs7QUFHQTtFQUNBLFVBQUE7QUFBQTs7QUFHQTtFQUNBLFVBQUE7QUFBQTs7QUFNQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLGlCQUFBO0FBSEo7O0FBTUU7RUFDRSxZQUFBO0VBQ0EsVUFBQTtFQUNBLHdCQUFBO0FBSEo7O0FBTUU7RUFDRSxhQUFBO0FBSEo7O0FBTUU7RUFDQyxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxVQUFBO0FBSEg7O0FBS0U7RUFDRSwwQ0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7QUFGSjs7QUFNRTtFQUNFLDBDQUFBO0VBQ0EsV0FBQTtBQUhKOztBQU1FO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0FBSEo7O0FBS0U7RUFDRSxVQUFBO0FBRko7O0FBS0U7RUFDRSxVQUFBO0VBQ0EscUJBQUE7RUFDQSwyQkFBQTtBQUZKIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmJvZHl7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIsIDE0LCAyNCk7XHJcbn1cclxuXHJcbmlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuaW5wdXR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyNSwgMTM4LCAxNjcsMC40KTtcclxufVxyXG5cclxuYmFkZ2V7XHJcbiB0ZXh0LWFsaWduOiAgY2VudGVyO1xyXG4gYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4uYmdjZWxse1xyXG4gICAgdGV4dC1hbGlnbjogIGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5wcm9maWxle1xyXG4gICAgbWF4LXdpZHRoOiAxMiU7XHJcbiAgICBtYXJnaW4tYm90dG9tOjIlO1xyXG4gICAgbWFyZ2luLXRvcDoyJTtcclxufVxyXG5cclxuLmZvcm1zLWNvbnRhaW5lcntcclxuICAgIG1hcmdpbi10b3A6MSU7XHJcbiAgICBtYXJnaW4tbGVmdDogMSU7XHJcbiAgICBtYXJnaW4tYm90dG9tOjA7XHJcbiAgICBtYXJnaW4tcmlnaHQ6MDtcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbn1cclxuXHJcbi5mb3JtLXByb2ZpbGV7XHJcblxyXG53aWR0aDogMjUlO1xyXG59XHJcblxyXG4uZm9ybS1tYXRyaXh7XHJcbndpZHRoOjUwJTtcclxufVxyXG5cclxuLmZvcm0tb3JkaW5hdGVze1xyXG53aWR0aDoyMCU7XHJcbi8vanVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XHJcbn1cclxuXHJcblxyXG5cclxuLm1hdHJpeC1yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMiU7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXRyaXgtY2VsbCB7XHJcbiAgICBtYXJnaW46IDAgMSU7XHJcbiAgICB3aWR0aDoxNSU7XHJcbiAgICBib3JkZXItc3R5bGU6c29saWQgYmx1ZTtcclxuICB9XHJcbiAgXHJcbiAgLmNlbGwtY29udGFpbmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcblxyXG4gIC5vcmRpbmF0ZXMtcm93e1xyXG4gICBkaXNwbGF5OmZsZXg7XHJcbiAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgIHdpZHRoOjQwJTtcclxuICB9XHJcbiAgLm9yZGluYXRlcy1jZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xyXG4gICAgbWFyZ2luLXRvcDogMTAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbToxMCU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgXHJcbiAgICBcclxuICB9XHJcbiAgLmlucHV0LW9yZGluYXRle1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzAsIDIzMSwgMTY4LCAwLjYpO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICB9XHJcblxyXG4gIC5mb3JtV2l0aEJ1dHRvbntcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gIH1cclxuICAuYnV0dG9ud2lkdGh7XHJcbiAgICB3aWR0aDoyMCU7XHJcbiAgfVxyXG5cclxuICAuZXJyb3ItbWVzc2FnZXsgXHJcbiAgICBtYXJnaW46MyU7XHJcbiAgICBjb2xvcjpyZ2IoMTU1LCA4LCA4KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGNob2NvbGF0ZTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","MatrixComponent_div_10_div_1_div_5_div_1_Template","MatrixComponent_div_10_div_1_div_5_div_2_Template","MatrixComponent_div_10_div_1_div_5_div_3_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r8","matrixForm","get","i_r4","j_r7","invalid","dirty","touched","tmp_1_0","errors","tmp_2_0","MatrixComponent_div_10_div_1_div_5_Template","ɵɵtextInterpolate1","ctx_r5","MatrixComponent_div_10_div_1_Template","ctx_r0","cols","ctx_r1","i_r16","MatrixComponent","constructor","fb","fbuilder","formb","formbOrdinates","apiService","degree","rows","Array","profileForm","group","matrixform","row","array","ordinatesForm","n","ngOnInit","degreeForm","required","i","j","controlName","addControl","pattern","onSubmit1","formData","value","postDegreeData","subscribe","next","response","console","log","error","submitMatrixForm","matrixData","valid","postMatrixData","setErrors","markAllAsTouched","submitOrdinatesForm","ordinatesData","postOrdinatesData","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","ɵɵlistener","MatrixComponent_Template_form_ngSubmit_2_listener","MatrixComponent_Template_form_ngSubmit_8_listener","MatrixComponent_div_10_Template","MatrixComponent_div_11_Template","MatrixComponent_Template_form_ngSubmit_15_listener","MatrixComponent_div_16_Template"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl,  Validators } from '@angular/forms';\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-matrix',\n  templateUrl: './matrix.component.html',\n  styleUrls: ['./matrix.component.scss']\n})\n\nexport class MatrixComponent implements OnInit {\n \n  degreeForm!: FormGroup;\n  degree:number=0; \n  \n  matrixForm!: FormGroup;\n  rows = Array(4);\n  cols = Array(4);\n\n // ordinatesForm!: FormGroup;\n  \n  profileForm = this.formb.group({\n    degree: [''],\n  });\n\n  matrixform: FormGroup = this.formb.group({\n    row: this.formb.array([])\n});\n\n ordinatesForm: FormGroup = this.formbOrdinates.group({\n  row: this.formbOrdinates.array([])\n })\n\n\n\n  \n\n\n\n  constructor(private fb: FormBuilder, private fbuilder:FormBuilder,  private formb: FormBuilder, private formbOrdinates: FormBuilder,\n     private apiService: ApiService) {\n    \n  }\n\n  n:number = 0  \n  ngOnInit(): void {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n\n\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n          const controlName = `cell${i}_${j}`;\n          this.matrixForm.addControl(controlName, new FormControl('', [\n              Validators.required,\n              Validators.pattern(/^\\d*\\.?\\d+$/) // Only numeric values alowed \n          ]));\n      }\n  }\n\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < 4; i++) {\n      {\n        this.ordinatesForm.addControl('ordin' + i , new FormControl(''));\n      }\n    }\n\n  }\n  \n\n    onSubmit1(): void {\n      const formData = this.profileForm.value;\n      this.apiService.postDegreeData(formData).subscribe({\n        next:response => console.log('ResponseDegree:', response),\n        error: error => console.error('Error:', error)\n      });\n    }\n\n    submitMatrixForm():void {\n      \n      const matrixData = this.matrixForm.value;\n      console.log(this.matrixForm.value);\n      if (this.matrixForm.valid) {\n        // Process the valid form data\n        this.apiService.postMatrixData(matrixData).subscribe({\n          next: response => console.log('ResponseMatrix:', response),\n          error: error => {\n            console.log('error in submiting matrix -', error);\n            this.matrixForm.setErrors({ 'backend': error.error.error });\n          }\n        });\n      } \n      else {    \n         this.matrixForm.markAllAsTouched();\n         console.log('Invalid matrix');\n      }\n    }\n\n    submitOrdinatesForm():void {\n        const ordinatesData = this.ordinatesForm.value;\n        console.log(this.ordinatesForm.value);\n        this.apiService.postOrdinatesData(ordinatesData).subscribe({\n           next: response => console.log('ResponseOrdinates:', response),\n           error: error => console.error('Error:', error)\n        })\n    }\n       \n         \n\n}\n\n","<div class=\"forms-container\">\n    <div class=\"form-profile\">\n        <form  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit1()\" class=\"profile\" novalidate >\n            <label name= \"degree\"></label>\n            <input type=\"number\" formControlName = \"degree\" name=\"degree\" class =\"form-control round\" placeholder=\"degree here\">\n            <button class=\"btn btn-secondary\">Enter</button>\n        </form>\n    </div>\n    <div class=\"form-matrix\">\n        <form [formGroup]=\"matrixForm\" (ngSubmit)=\"submitMatrixForm()\" class=\"rounded\">\n            <div class=\"formWithButton\">\n                <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row\">\n                    <div *ngFor=\"let col of cols; let j = index\" class=\"matrix-cell\">\n                        <div class=\"cell-container\">\n                            <input type=\"number\" [formControlName]=\"'cell' + i + '_' + j\" class=\"form-control\" id=\"cell\" required>\n                            <label for=\"cell\" class=\"badge bg-secondary bgcell\" > x{{j+1}}</label>\n                            <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\" class=\"error-message\">\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.invalid && (matrixForm.get('cell' + i + '_' + j)?.dirty || matrixForm.get('cell' + i + '_' + j)?.touched)\"\n                                     class=\"alert alert-danger\">\n                                </div>\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['required']\">Cell is required.</div>\n                               <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\">Only numbers are allowed!</div>\n                            </div>\n                           \n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"matrixForm.errors?.['backend']\" class=\"alert alert-dark error-message\" role=\"alert\" >\n                    {{ matrixForm.errors?.['backend'] }}\n                </div>\n            \n                <button type=\"submit\" class=\"btn btn-primary buttonwidth\">Submit</button>\n            </div>\n        </form>\n    </div> \n    <div class=\"form-ordinates\">  \n        <form [formGroup]=\"ordinatesForm\" class=\"ordinates-row\" (ngSubmit) = \"submitOrdinatesForm()\">\n            <div *ngFor=\"let row of rows; let i = index\" class=\"form-control rounded ordinates-cell\">\n                    <input type =\"number\" class=\"rounded input-ordinate\" [formControlName]=\"'ordin'+ i\" required/>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        </form>\n    </div>\n</div>\n"],"mappings":"AACA,SAA6CA,WAAW,EAAoBC,UAAU,QAAQ,gBAAgB;;;;;;;ICgB9EC,EAAA,CAAAC,SAAA,cAEM;;;;;IACND,EAAA,CAAAE,cAAA,UAAwE;IAAAF,EAAA,CAAAG,MAAA,wBAAiB;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;;IAChGJ,EAAA,CAAAE,cAAA,UAAuE;IAAAF,EAAA,CAAAG,MAAA,gCAAyB;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;;IALzGJ,EAAA,CAAAE,cAAA,cAA6F;IACzFF,EAAA,CAAAK,UAAA,IAAAC,iDAAA,kBAEM;IACNN,EAAA,CAAAK,UAAA,IAAAE,iDAAA,kBAA+F;IAChGP,EAAA,CAAAK,UAAA,IAAAG,iDAAA,kBAAsG;IACzGR,EAAA,CAAAI,YAAA,EAAM;;;;;;;;;IALIJ,EAAA,CAAAS,SAAA,GAAqJ;IAArJT,EAAA,CAAAU,UAAA,WAAAC,OAAA,GAAAC,MAAA,CAAAC,UAAA,CAAAC,GAAA,UAAAC,IAAA,SAAAC,IAAA,oBAAAL,OAAA,CAAAM,OAAA,QAAAN,OAAA,GAAAC,MAAA,CAAAC,UAAA,CAAAC,GAAA,UAAAC,IAAA,SAAAC,IAAA,oBAAAL,OAAA,CAAAO,KAAA,OAAAP,OAAA,GAAAC,MAAA,CAAAC,UAAA,CAAAC,GAAA,UAAAC,IAAA,SAAAC,IAAA,oBAAAL,OAAA,CAAAQ,OAAA,GAAqJ;IAGrJnB,EAAA,CAAAS,SAAA,GAAgE;IAAhET,EAAA,CAAAU,UAAA,UAAAU,OAAA,GAAAR,MAAA,CAAAC,UAAA,CAAAC,GAAA,UAAAC,IAAA,SAAAC,IAAA,oBAAAI,OAAA,CAAAC,MAAA,kBAAAD,OAAA,CAAAC,MAAA,aAAgE;IACjErB,EAAA,CAAAS,SAAA,GAA+D;IAA/DT,EAAA,CAAAU,UAAA,UAAAY,OAAA,GAAAV,MAAA,CAAAC,UAAA,CAAAC,GAAA,UAAAC,IAAA,SAAAC,IAAA,oBAAAM,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,YAA+D;;;;;IAThFrB,EAAA,CAAAE,cAAA,cAAiE;IAEzDF,EAAA,CAAAC,SAAA,gBAAsG;IACtGD,EAAA,CAAAE,cAAA,gBAAqD;IAACF,EAAA,CAAAG,MAAA,GAAQ;IAAAH,EAAA,CAAAI,YAAA,EAAQ;IACtEJ,EAAA,CAAAK,UAAA,IAAAkB,2CAAA,kBAMM;IAEVvB,EAAA,CAAAI,YAAA,EAAM;;;;;;;IAVmBJ,EAAA,CAAAS,SAAA,GAAwC;IAAxCT,EAAA,CAAAU,UAAA,6BAAAK,IAAA,SAAAC,IAAA,CAAwC;IACPhB,EAAA,CAAAS,SAAA,GAAQ;IAART,EAAA,CAAAwB,kBAAA,OAAAR,IAAA,SAAQ;IACxDhB,EAAA,CAAAS,SAAA,GAA+D;IAA/DT,EAAA,CAAAU,UAAA,UAAAY,OAAA,GAAAG,MAAA,CAAAZ,UAAA,CAAAC,GAAA,UAAAC,IAAA,SAAAC,IAAA,oBAAAM,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,YAA+D;;;;;IALjFrB,EAAA,CAAAE,cAAA,cAAgE;IAC5DF,EAAA,CAAAK,UAAA,IAAAqB,qCAAA,kBAaM;IACV1B,EAAA,CAAAI,YAAA,EAAM;;;;IAdmBJ,EAAA,CAAAS,SAAA,GAAS;IAATT,EAAA,CAAAU,UAAA,YAAAiB,MAAA,CAAAC,IAAA,CAAS;;;;;IAelC5B,EAAA,CAAAE,cAAA,cAAiG;IAC7FF,EAAA,CAAAG,MAAA,GACJ;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;IADFJ,EAAA,CAAAS,SAAA,GACJ;IADIT,EAAA,CAAAwB,kBAAA,MAAAK,MAAA,CAAAhB,UAAA,CAAAQ,MAAA,kBAAAQ,MAAA,CAAAhB,UAAA,CAAAQ,MAAA,iBACJ;;;;;IAQJrB,EAAA,CAAAE,cAAA,cAAyF;IACjFF,EAAA,CAAAC,SAAA,gBAA8F;IACtGD,EAAA,CAAAI,YAAA,EAAM;;;;IADuDJ,EAAA,CAAAS,SAAA,GAA8B;IAA9BT,EAAA,CAAAU,UAAA,8BAAAoB,KAAA,CAA8B;;;AD7BvG,OAAM,MAAOC,eAAe;EA6B1BC,YAAoBC,EAAe,EAAUC,QAAoB,EAAWC,KAAkB,EAAUC,cAA2B,EACxHC,UAAsB;IADb,KAAAJ,EAAE,GAAFA,EAAE;IAAuB,KAAAC,QAAQ,GAARA,QAAQ;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAC3G,KAAAC,UAAU,GAAVA,UAAU;IA3BrB,KAAAC,MAAM,GAAQ,CAAC;IAGf,KAAAC,IAAI,GAAGC,KAAK,CAAC,CAAC,CAAC;IACf,KAAAZ,IAAI,GAAGY,KAAK,CAAC,CAAC,CAAC;IAEhB;IAEC,KAAAC,WAAW,GAAG,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC;MAC7BJ,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;IAEF,KAAAK,UAAU,GAAc,IAAI,CAACR,KAAK,CAACO,KAAK,CAAC;MACvCE,GAAG,EAAE,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,EAAE;KAC3B,CAAC;IAED,KAAAC,aAAa,GAAc,IAAI,CAACV,cAAc,CAACM,KAAK,CAAC;MACpDE,GAAG,EAAE,IAAI,CAACR,cAAc,CAACS,KAAK,CAAC,EAAE;KACjC,CAAC;IAaD,KAAAE,CAAC,GAAU,CAAC;EAFZ;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAAChB,EAAE,CAACS,KAAK,CAAC;MAC9BJ,MAAM,EAAE,CAAC,IAAI,CAACA,MAAM,EAAEvC,UAAU,CAACmD,QAAQ;KAC1C,CAAC;IAEF,IAAI,CAACT,WAAW,GAAG,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC;MAC/BJ,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;IAGF,IAAI,CAACzB,UAAU,GAAG,IAAI,CAACsB,KAAK,CAACO,KAAK,CAAC,EAAE,CAAC;IACtC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACxB,MAAMC,WAAW,GAAG,OAAOF,CAAC,IAAIC,CAAC,EAAE;QACnC,IAAI,CAACvC,UAAU,CAACyC,UAAU,CAACD,WAAW,EAAE,IAAIvD,WAAW,CAAC,EAAE,EAAE,CACxDC,UAAU,CAACmD,QAAQ,EACnBnD,UAAU,CAACwD,OAAO,CAAC,aAAa,CAAC,CAAC;QAAA,CACrC,CAAC,CAAC;;;;IAIT,IAAI,CAACT,aAAa,GAAG,IAAI,CAACX,KAAK,CAACO,KAAK,CAAC,EAAE,CAAC;IACzC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B;QACE,IAAI,CAACL,aAAa,CAACQ,UAAU,CAAC,OAAO,GAAGH,CAAC,EAAG,IAAIrD,WAAW,CAAC,EAAE,CAAC,CAAC;;;EAItE;EAGE0D,SAASA,CAAA;IACP,MAAMC,QAAQ,GAAG,IAAI,CAAChB,WAAW,CAACiB,KAAK;IACvC,IAAI,CAACrB,UAAU,CAACsB,cAAc,CAACF,QAAQ,CAAC,CAACG,SAAS,CAAC;MACjDC,IAAI,EAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;MACzDG,KAAK,EAAEA,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK;KAC9C,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IAEd,MAAMC,UAAU,GAAG,IAAI,CAACtD,UAAU,CAAC6C,KAAK;IACxCK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnD,UAAU,CAAC6C,KAAK,CAAC;IAClC,IAAI,IAAI,CAAC7C,UAAU,CAACuD,KAAK,EAAE;MACzB;MACA,IAAI,CAAC/B,UAAU,CAACgC,cAAc,CAACF,UAAU,CAAC,CAACP,SAAS,CAAC;QACnDC,IAAI,EAAEC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;QAC1DG,KAAK,EAAEA,KAAK,IAAG;UACbF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,KAAK,CAAC;UACjD,IAAI,CAACpD,UAAU,CAACyD,SAAS,CAAC;YAAE,SAAS,EAAEL,KAAK,CAACA,KAAK,CAACA;UAAK,CAAE,CAAC;QAC7D;OACD,CAAC;KACH,MACI;MACF,IAAI,CAACpD,UAAU,CAAC0D,gBAAgB,EAAE;MAClCR,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;EAElC;EAEAQ,mBAAmBA,CAAA;IACf,MAAMC,aAAa,GAAG,IAAI,CAAC3B,aAAa,CAACY,KAAK;IAC9CK,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,aAAa,CAACY,KAAK,CAAC;IACrC,IAAI,CAACrB,UAAU,CAACqC,iBAAiB,CAACD,aAAa,CAAC,CAACb,SAAS,CAAC;MACxDC,IAAI,EAAEC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC7DG,KAAK,EAAEA,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK;KAC/C,CAAC;EACN;EAAC,QAAAU,CAAA,G;qBArGQ5C,eAAe,EAAA/B,EAAA,CAAA4E,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA9E,EAAA,CAAA4E,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA9E,EAAA,CAAA4E,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA9E,EAAA,CAAA4E,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA9E,EAAA,CAAA4E,iBAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAflD,eAAe;IAAAmD,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT5BxF,EAAA,CAAAE,cAAA,aAA6B;QAEYF,EAAA,CAAA0F,UAAA,sBAAAC,kDAAA;UAAA,OAAYF,GAAA,CAAAjC,SAAA,EAAW;QAAA,EAAC;QACrDxD,EAAA,CAAAC,SAAA,eAA8B;QAE9BD,EAAA,CAAAE,cAAA,gBAAkC;QAAAF,EAAA,CAAAG,MAAA,YAAK;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAGxDJ,EAAA,CAAAE,cAAA,aAAyB;QACUF,EAAA,CAAA0F,UAAA,sBAAAE,kDAAA;UAAA,OAAYH,GAAA,CAAAvB,gBAAA,EAAkB;QAAA,EAAC;QAC1DlE,EAAA,CAAAE,cAAA,aAA4B;QACxBF,EAAA,CAAAK,UAAA,KAAAwF,+BAAA,iBAeM;QACN7F,EAAA,CAAAK,UAAA,KAAAyF,+BAAA,kBAEM;QAEN9F,EAAA,CAAAE,cAAA,kBAA0D;QAAAF,EAAA,CAAAG,MAAA,cAAM;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAIrFJ,EAAA,CAAAE,cAAA,eAA4B;QACgCF,EAAA,CAAA0F,UAAA,sBAAAK,mDAAA;UAAA,OAAcN,GAAA,CAAAjB,mBAAA,EAAqB;QAAA,EAAC;QACxFxE,EAAA,CAAAK,UAAA,KAAA2F,+BAAA,kBAEM;QACNhG,EAAA,CAAAE,cAAA,kBAA8C;QAAAF,EAAA,CAAAG,MAAA,cAAM;QAAAH,EAAA,CAAAI,YAAA,EAAS;;;QAtC1DJ,EAAA,CAAAS,SAAA,GAAyB;QAAzBT,EAAA,CAAAU,UAAA,cAAA+E,GAAA,CAAAhD,WAAA,CAAyB;QAO1BzC,EAAA,CAAAS,SAAA,GAAwB;QAAxBT,EAAA,CAAAU,UAAA,cAAA+E,GAAA,CAAA5E,UAAA,CAAwB;QAEDb,EAAA,CAAAS,SAAA,GAAS;QAATT,EAAA,CAAAU,UAAA,YAAA+E,GAAA,CAAAlD,IAAA,CAAS;QAgBxBvC,EAAA,CAAAS,SAAA,GAAoC;QAApCT,EAAA,CAAAU,UAAA,SAAA+E,GAAA,CAAA5E,UAAA,CAAAQ,MAAA,kBAAAoE,GAAA,CAAA5E,UAAA,CAAAQ,MAAA,YAAoC;QAS5CrB,EAAA,CAAAS,SAAA,GAA2B;QAA3BT,EAAA,CAAAU,UAAA,cAAA+E,GAAA,CAAA3C,aAAA,CAA2B;QACR9C,EAAA,CAAAS,SAAA,GAAS;QAATT,EAAA,CAAAU,UAAA,YAAA+E,GAAA,CAAAlD,IAAA,CAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}