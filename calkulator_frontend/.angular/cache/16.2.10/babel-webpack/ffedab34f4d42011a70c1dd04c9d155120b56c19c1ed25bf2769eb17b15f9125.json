{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction MatrixComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", j_r5);\n  }\n}\nfunction MatrixComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, MatrixComponent_div_2_div_1_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getControls(row_r1));\n  }\n}\nexport class MatrixComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.matrixForm = this.fb.group({\n      matrix: this.fb.array([this.initRow()])\n    });\n  }\n  initRow() {\n    return this.fb.array([this.initColumn()]);\n  }\n  initColumn() {\n    return this.fb.control(0);\n  }\n  get matrix() {\n    return this.matrixForm.get('matrix');\n  }\n  // Safe type casting to FormArray\n  getControls(formArray) {\n    return formArray.controls;\n  }\n  addRow() {\n    this.matrix.push(this.initRow());\n  }\n  addColumn() {\n    this.matrix.controls.forEach(row => row.push(this.initColumn()));\n  }\n  onSubmit() {\n    console.log('Matrix Values:', this.matrixForm.value);\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"matrix\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\"], [3, \"formGroupName\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", 3, \"formControlName\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, MatrixComponent_div_2_Template, 2, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function MatrixComponent_Template_button_click_3_listener() {\n          return ctx.addColumn();\n        });\n        i0.ɵɵtext(4, \"Add Column\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function MatrixComponent_Template_button_click_5_listener() {\n          return ctx.addRow();\n        });\n        i0.ɵɵtext(6, \"Add Row\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵtext(8, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.matrixForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getControls(ctx.matrix));\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","j_r5","ɵɵtemplate","MatrixComponent_div_2_div_1_Template","i_r2","ctx_r0","getControls","row_r1","MatrixComponent","constructor","fb","ngOnInit","matrixForm","group","matrix","array","initRow","initColumn","control","get","formArray","controls","addRow","push","addColumn","forEach","row","onSubmit","console","log","value","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","ɵɵlistener","MatrixComponent_Template_form_ngSubmit_0_listener","MatrixComponent_div_2_Template","MatrixComponent_Template_button_click_3_listener","ɵɵtext","MatrixComponent_Template_button_click_5_listener"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl  } from '@angular/forms';\n@Component({\n  selector: 'app-matrix',\n  templateUrl: './matrix.component.html',\n  styleUrls: ['./matrix.component.scss']\n})\n\nexport class MatrixComponent implements OnInit {\n  matrixForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.matrixForm = this.fb.group({\n      matrix: this.fb.array([this.initRow()])\n    });\n  }\n\n  initRow(): FormArray {\n    return this.fb.array([this.initColumn()]);\n  }\n\n  initColumn(): FormControl {\n    return this.fb.control(0);\n  }\n\n  get matrix(): FormArray {\n    return this.matrixForm.get('matrix') as FormArray;\n  }\n\n  // Safe type casting to FormArray\n  getControls(formArray: AbstractControl): AbstractControl[] {\n    return (formArray as FormArray).controls;\n  }\n\n  addRow(): void {\n    this.matrix.push(this.initRow());\n  }\n\n  addColumn(): void {\n    this.matrix.controls.forEach(row => (row as FormArray).push(this.initColumn()));\n  }\n\n  onSubmit(): void {\n    console.log('Matrix Values:', this.matrixForm.value);\n  }\n}","<form [formGroup]=\"matrixForm\" (ngSubmit)=\"onSubmit()\">\n    <div formArrayName=\"matrix\">\n      <div *ngFor=\"let row of getControls(matrix); let i=index\" [formGroupName]=\"i\">\n        <div *ngFor=\"let col of getControls(row); let j=index\">\n          <input type=\"number\" [formControlName]=\"j\">\n        </div>\n      </div>\n    </div>\n    <button type=\"button\" (click)=\"addColumn()\">Add Column</button>\n    <button type=\"button\" (click)=\"addRow()\">Add Row</button>\n    <button type=\"submit\">Submit</button>\n  </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}