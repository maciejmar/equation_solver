{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    //apiUrl = 'http://localhost:8001/calculator/solve/';  // URL of my Django API\n    this.apiUrl = environment.apiUrl;\n    this.apiAnotherUrl = environment.apiAnotherUrl;\n    this.apiOrdinatesUrl = environment.apiOrdinatesUrl;\n  }\n  getSolverData() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  postMatrixData(matrixData) {\n    return this.http.post(this.apiUrl, matrixData);\n  }\n  postDegreeData(degreeData) {\n    return this.http.post(this.apiAnotherUrl, degreeData); //(`${this.apiUrl}another_post/`, degreeData);\n  }\n\n  postOrdinatesData(ordinatesData) {\n    return this.http.post(this.apiOrdinatesUrl, ordinatesData); //(`${this.apiUrl}ordinates/`, ordinatesData);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ApiService","constructor","http","apiUrl","apiAnotherUrl","apiOrdinatesUrl","getSolverData","get","postMatrixData","matrixData","post","postDegreeData","degreeData","postOrdinatesData","ordinatesData","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  //apiUrl = 'http://localhost:8001/calculator/solve/';  // URL of my Django API\n\n  apiUrl = environment.apiUrl;\n  apiAnotherUrl = environment.apiAnotherUrl;\n  apiOrdinatesUrl = environment.apiOrdinatesUrl;\n  constructor(private http: HttpClient) { }\n\n  getSolverData() {\n    return this.http.get<any>(`${this.apiUrl}`);\n  }\n\n  postMatrixData(matrixData: any) {\n    return this.http.post<any>( this.apiUrl, matrixData );\n  }\n\n  postDegreeData(degreeData: any) {\n     return this.http.post<any> ( this.apiAnotherUrl, degreeData ); //(`${this.apiUrl}another_post/`, degreeData);\n  }\n\n  postOrdinatesData(ordinatesData: any) {\n    return this.http.post<any> ( this.apiOrdinatesUrl, ordinatesData ); //(`${this.apiUrl}ordinates/`, ordinatesData);\n }\n\n  \n  \n}"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;;;AAMzD,OAAM,MAAOC,UAAU;EAMrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB;IAEA,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM;IAC3B,KAAAC,aAAa,GAAGL,WAAW,CAACK,aAAa;IACzC,KAAAC,eAAe,GAAGN,WAAW,CAACM,eAAe;EACL;EAExCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,MAAM,EAAE,CAAC;EAC7C;EAEAK,cAAcA,CAACC,UAAe;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACP,MAAM,EAAEM,UAAU,CAAE;EACvD;EAEAE,cAAcA,CAACC,UAAe;IAC3B,OAAO,IAAI,CAACV,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACN,aAAa,EAAEQ,UAAU,CAAE,CAAC,CAAC;EAClE;;EAEAC,iBAAiBA,CAACC,aAAkB;IAClC,OAAO,IAAI,CAACZ,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACL,eAAe,EAAES,aAAa,CAAE,CAAC,CAAC;EACvE;EAAC,QAAAC,CAAA,G;qBAtBWf,UAAU,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVpB,UAAU;IAAAqB,OAAA,EAAVrB,UAAU,CAAAsB,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}