{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10);\n    i0.ɵɵelement(2, \"input\", 11);\n    i0.ɵɵelementStart(3, \"label\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const j_r5 = ctx.index;\n    const i_r2 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"cell\" + i_r2 + \"_\" + j_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" x\", j_r5 + 1, \"\");\n  }\n}\nfunction MatrixComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, MatrixComponent_div_9_div_1_Template, 5, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.cols);\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, fbuilder, formb, apiService) {\n    this.fb = fb;\n    this.fbuilder = fbuilder;\n    this.formb = formb;\n    this.apiService = apiService;\n    this.degree = 0;\n    this.rows = Array(4);\n    this.cols = Array(4);\n    this.profileForm = this.formb.group({\n      degree: ['']\n    });\n    this.matrixform = this.formb.group({\n      row: this.formb.array([])\n    });\n    this.n = 0;\n  }\n  ngOnInit() {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.matrixForm.addControl('cell' + i + '_' + j, new FormControl(''));\n      }\n    }\n  }\n  onSubmit1() {\n    const formData = this.profileForm.value;\n    this.apiService.postDegreeData(formData).subscribe({\n      next: response => console.log('Response:', response),\n      error: error => console.error('Error:', error)\n    });\n  }\n  submitMatrixForm() {\n    const matrixData = this.matrixForm.value;\n    console.log(this.matrixForm.value);\n    this.apiService.postMatrixData(matrixData).subscribe({\n      next: response => console.log('Response:', response),\n      error: error => console.error('Error:', error)\n    });\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"forms-container\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"degree\"], [\"type\", \"number\", \"formControlName\", \"degree\", \"name\", \"degree\", \"placeholder\", \"degree here\"], [1, \"m-3\", \"rounded\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"matrix-row\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"matrix-row\"], [\"class\", \"matrix-cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"matrix-cell\"], [1, \"cell-container\"], [\"type\", \"number\", \"id\", \"cell\", 1, \"form-control\", 3, \"formControlName\"], [\"for\", \"cell\", 1, \"badge\", \"bg-secondary\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \"Hello, here is the matrix form:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit1();\n        });\n        i0.ɵɵelement(4, \"label\", 2)(5, \"input\", 3);\n        i0.ɵɵelementStart(6, \"button\");\n        i0.ɵɵtext(7, \"Submit degree\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitMatrixForm();\n        });\n        i0.ɵɵtemplate(9, MatrixComponent_div_9_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13, \"here is matrixForm\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.matrixForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rows);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"input[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  background-color: rgba(125, 138, 167, 0.2);\\n}\\n\\n.forms-container[_ngcontent-%COMP%] {\\n  margin-left: 1%;\\n}\\n\\n.matrix-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 2%;\\n}\\n\\n.matrix-cell[_ngcontent-%COMP%] {\\n  margin: 0 5px;\\n  max-width: 7%;\\n  border-style: solid blue;\\n}\\n\\n.cell-container[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWF0cml4L21hdHJpeC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTs7RUFFRSx3QkFBQTtFQUNBLFNBQUE7QUFBRjs7QUFHQTtFQUNJLDBDQUFBO0FBQUo7O0FBR0E7RUFDSSxlQUFBO0FBQUo7O0FBRUE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVFO0VBQ0UsYUFBQTtFQUNBLGFBQUE7RUFDQSx3QkFBQTtBQUNKOztBQUVFO0VBQ0UsYUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuaW5wdXR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyNSwgMTM4LCAxNjcsMC4yKTtcclxufVxyXG5cclxuLmZvcm1zLWNvbnRhaW5lcntcclxuICAgIG1hcmdpbi1sZWZ0OiAxJTtcclxufVxyXG4ubWF0cml4LXJvdyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyJTtcclxuICB9XHJcbiAgXHJcbiAgLm1hdHJpeC1jZWxsIHtcclxuICAgIG1hcmdpbjogMCA1cHg7XHJcbiAgICBtYXgtd2lkdGg6NyU7XHJcbiAgICBib3JkZXItc3R5bGU6c29saWQgYmx1ZTtcclxuICB9XHJcbiAgXHJcbiAgLmNlbGwtY29udGFpbmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIFxyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","i_r2","j_r5","ɵɵtextInterpolate1","ɵɵtemplate","MatrixComponent_div_9_div_1_Template","ctx_r0","cols","MatrixComponent","constructor","fb","fbuilder","formb","apiService","degree","rows","Array","profileForm","group","matrixform","row","array","n","ngOnInit","degreeForm","required","matrixForm","i","j","addControl","onSubmit1","formData","value","postDegreeData","subscribe","next","response","console","log","error","submitMatrixForm","matrixData","postMatrixData","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","ɵɵlistener","MatrixComponent_Template_form_ngSubmit_3_listener","MatrixComponent_Template_form_ngSubmit_8_listener","MatrixComponent_div_9_Template"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl,  Validators } from '@angular/forms';\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-matrix',\n  templateUrl: './matrix.component.html',\n  styleUrls: ['./matrix.component.scss']\n})\n\nexport class MatrixComponent implements OnInit {\n \n  degreeForm!: FormGroup;\n  degree:number=0; \n  \n  matrixForm!: FormGroup;\n  rows = Array(4);\n  cols = Array(4);\n\n\n  profileForm = this.formb.group({\n    degree: [''],\n  });\n\n  matrixform: FormGroup = this.formb.group({\n    row: this.formb.array([])\n});\n\n  \n\n\n\n  constructor(private fb: FormBuilder, private fbuilder:FormBuilder,  private formb: FormBuilder, private apiService: ApiService) {\n    \n  }\n\n  n:number = 0  \n  ngOnInit(): void {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.matrixForm.addControl('cell' + i + '_' + j, new FormControl(''));\n      }\n    }\n\n  }\n  \n\n    onSubmit1(): void {\n      const formData = this.profileForm.value;\n      this.apiService.postDegreeData(formData).subscribe({\n        next:response => console.log('Response:', response),\n        error: error => console.error('Error:', error)\n      });\n    }\n\n    submitMatrixForm():void {\n      const matrixData = this.matrixForm.value;\n      console.log(this.matrixForm.value);\n      this.apiService.postMatrixData(matrixData).subscribe({\n        next: response => console.log('Response:', response),\n        error: error => console.error('Error:', error)\n      });\n    }\n\n\n}\n\n","<div class=\"forms-container\">\n    <p>Hello, here is the matrix form:</p>\n    <form  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit1()\" novalidate >\n        <label name= \"degree\"></label>\n        <input type=\"number\" formControlName = \"degree\" name=\"degree\" placeholder=\"degree here\">\n        <button>Submit degree</button>\n    </form>\n\n\n        <form [formGroup]=\"matrixForm\" (ngSubmit)=\"submitMatrixForm()\" class=\"m-3 rounded\">\n            <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row\">\n            <div *ngFor=\"let col of cols; let j = index\" class=\"matrix-cell\">\n                <div class=\"cell-container\">\n                   <input type=\"number\" [formControlName]=\"'cell' + i + '_' + j\" class=\"form-control\" id=\"cell\">\n                   <label for=\"cell\" class=\"badge bg-secondary\" > x{{j+1}}</label>\n                </div>\n              \n            </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        \n    \n    </form>\n\n\n    <p>here is matrixForm</p>\n</div>\n"],"mappings":"AACA,SAA6CA,WAAW,EAAoBC,UAAU,QAAQ,gBAAgB;;;;;;;ICUlGC,EAAA,CAAAC,cAAA,aAAiE;IAE1DD,EAAA,CAAAE,SAAA,gBAA6F;IAC7FF,EAAA,CAAAC,cAAA,gBAA8C;IAACD,EAAA,CAAAG,MAAA,GAAQ;IAAAH,EAAA,CAAAI,YAAA,EAAQ;;;;;IAD1CJ,EAAA,CAAAK,SAAA,GAAwC;IAAxCL,EAAA,CAAAM,UAAA,6BAAAC,IAAA,SAAAC,IAAA,CAAwC;IACdR,EAAA,CAAAK,SAAA,GAAQ;IAARL,EAAA,CAAAS,kBAAA,OAAAD,IAAA,SAAQ;;;;;IAJ9DR,EAAA,CAAAC,cAAA,aAAgE;IAChED,EAAA,CAAAU,UAAA,IAAAC,oCAAA,iBAMM;IACNX,EAAA,CAAAI,YAAA,EAAM;;;;IAPeJ,EAAA,CAAAK,SAAA,GAAS;IAATL,EAAA,CAAAM,UAAA,YAAAM,MAAA,CAAAC,IAAA,CAAS;;;ADF1C,OAAM,MAAOC,eAAe;EAsB1BC,YAAoBC,EAAe,EAAUC,QAAoB,EAAWC,KAAkB,EAAUC,UAAsB;IAA1G,KAAAH,EAAE,GAAFA,EAAE;IAAuB,KAAAC,QAAQ,GAARA,QAAQ;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAAuB,KAAAC,UAAU,GAAVA,UAAU;IAnBlH,KAAAC,MAAM,GAAQ,CAAC;IAGf,KAAAC,IAAI,GAAGC,KAAK,CAAC,CAAC,CAAC;IACf,KAAAT,IAAI,GAAGS,KAAK,CAAC,CAAC,CAAC;IAGf,KAAAC,WAAW,GAAG,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC;MAC7BJ,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;IAEF,KAAAK,UAAU,GAAc,IAAI,CAACP,KAAK,CAACM,KAAK,CAAC;MACvCE,GAAG,EAAE,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,EAAE;KAC3B,CAAC;IAUA,KAAAC,CAAC,GAAU,CAAC;EAFZ;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACd,EAAE,CAACQ,KAAK,CAAC;MAC9BJ,MAAM,EAAE,CAAC,IAAI,CAACA,MAAM,EAAErB,UAAU,CAACgC,QAAQ;KAC1C,CAAC;IAEF,IAAI,CAACR,WAAW,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MAC/BJ,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;IAEF,IAAI,CAACY,UAAU,GAAG,IAAI,CAACd,KAAK,CAACM,KAAK,CAAC,EAAE,CAAC;IACtC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAI,CAACF,UAAU,CAACG,UAAU,CAAC,MAAM,GAAGF,CAAC,GAAG,GAAG,GAAGC,CAAC,EAAE,IAAIpC,WAAW,CAAC,EAAE,CAAC,CAAC;;;EAI3E;EAGEsC,SAASA,CAAA;IACP,MAAMC,QAAQ,GAAG,IAAI,CAACd,WAAW,CAACe,KAAK;IACvC,IAAI,CAACnB,UAAU,CAACoB,cAAc,CAACF,QAAQ,CAAC,CAACG,SAAS,CAAC;MACjDC,IAAI,EAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;MACnDG,KAAK,EAAEA,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK;KAC9C,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IACd,MAAMC,UAAU,GAAG,IAAI,CAACf,UAAU,CAACM,KAAK;IACxCK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,UAAU,CAACM,KAAK,CAAC;IAClC,IAAI,CAACnB,UAAU,CAAC6B,cAAc,CAACD,UAAU,CAAC,CAACP,SAAS,CAAC;MACnDC,IAAI,EAAEC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;MACpDG,KAAK,EAAEA,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK;KAC9C,CAAC;EACJ;EAAC,QAAAI,CAAA,G;qBA7DQnC,eAAe,EAAAd,EAAA,CAAAkD,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAApD,EAAA,CAAAkD,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAApD,EAAA,CAAAkD,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAApD,EAAA,CAAAkD,iBAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfzC,eAAe;IAAA0C,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT5B9D,EAAA,CAAAC,cAAA,aAA6B;QACtBD,EAAA,CAAAG,MAAA,sCAA+B;QAAAH,EAAA,CAAAI,YAAA,EAAI;QACtCJ,EAAA,CAAAC,cAAA,cAAsE;QAArCD,EAAA,CAAAgE,UAAA,sBAAAC,kDAAA;UAAA,OAAYF,GAAA,CAAA3B,SAAA,EAAW;QAAA,EAAC;QACrDpC,EAAA,CAAAE,SAAA,eAA8B;QAE9BF,EAAA,CAAAC,cAAA,aAAQ;QAAAD,EAAA,CAAAG,MAAA,oBAAa;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAI9BJ,EAAA,CAAAC,cAAA,cAAmF;QAApDD,EAAA,CAAAgE,UAAA,sBAAAE,kDAAA;UAAA,OAAYH,GAAA,CAAAjB,gBAAA,EAAkB;QAAA,EAAC;QAC1D9C,EAAA,CAAAU,UAAA,IAAAyD,8BAAA,iBAQM;QACNnE,EAAA,CAAAC,cAAA,iBAA8C;QAAAD,EAAA,CAAAG,MAAA,cAAM;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAMrEJ,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAG,MAAA,0BAAkB;QAAAH,EAAA,CAAAI,YAAA,EAAI;;;QAvBlBJ,EAAA,CAAAK,SAAA,GAAyB;QAAzBL,EAAA,CAAAM,UAAA,cAAAyD,GAAA,CAAAxC,WAAA,CAAyB;QAOtBvB,EAAA,CAAAK,SAAA,GAAwB;QAAxBL,EAAA,CAAAM,UAAA,cAAAyD,GAAA,CAAA/B,UAAA,CAAwB;QACLhC,EAAA,CAAAK,SAAA,GAAS;QAATL,EAAA,CAAAM,UAAA,YAAAyD,GAAA,CAAA1C,IAAA,CAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}