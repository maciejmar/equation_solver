{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" degree must be an integer between 2 and 7 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_2_div_1_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Numbers only! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_2_div_1_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Cell is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_2_div_1_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only numbers are allowed!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_2_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, MatrixComponent_div_8_div_2_div_1_div_6_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, MatrixComponent_div_8_div_2_div_1_div_6_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(3, MatrixComponent_div_8_div_2_div_1_div_6_div_3_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r12 = i0.ɵɵnextContext().index;\n    const i_r9 = i0.ɵɵnextContext().index;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_0_0.touched) && ((tmp_0_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"expressionInvalid\"]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n  }\n}\nfunction MatrixComponent_div_8_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"input\", 22);\n    i0.ɵɵlistener(\"blur\", function MatrixComponent_div_8_div_2_div_1_Template_input_blur_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const j_r12 = restoredCtx.index;\n      const i_r9 = i0.ɵɵnextContext().index;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onFieldBlur(\"cell\" + i_r9 + \"_\" + j_r12));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\")(4, \"label\", 23);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, MatrixComponent_div_8_div_2_div_1_div_6_Template, 4, 3, \"div\", 24);\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8, \"+\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const j_r12 = ctx.index;\n    const i_r9 = i0.ɵɵnextContext().index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"cell\" + i_r9 + \"_\" + j_r12);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" x\", j_r12 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r10.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(j_r12 < ctx_r10.cols.length - 1 ? \"plusSign\" : \"plusSign hiddenPlus\");\n  }\n}\nfunction MatrixComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, MatrixComponent_div_8_div_2_div_1_Template, 9, 5, \"div\", 18);\n    i0.ɵɵelementStart(2, \"span\", 19);\n    i0.ɵɵtext(3, \"=\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cols);\n  }\n}\nfunction MatrixComponent_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.matrixForm.errors == null ? null : ctx_r4.matrixForm.errors[\"backend\"], \" \");\n  }\n}\nfunction MatrixComponent_div_8_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.matrixForm.invalid || !ctx_r5.okToCompleteMatrixForm);\n  }\n}\nfunction MatrixComponent_div_8_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 20)(2, \"div\", 21)(3, \"div\", 29);\n    i0.ɵɵelement(4, \"input\", 30);\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵelement(6, \"label\", 31);\n    i0.ɵɵtext(7, \"x\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const i_r24 = ctx.index;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"ordin\" + i_r24);\n  }\n}\nfunction MatrixComponent_div_8_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r7.ordinatesForm.valid);\n  }\n}\nfunction MatrixComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_div_8_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.submitMatrixForm());\n    });\n    i0.ɵɵtemplate(2, MatrixComponent_div_8_div_2_Template, 4, 1, \"div\", 12);\n    i0.ɵɵtemplate(3, MatrixComponent_div_8_div_3_Template, 2, 1, \"div\", 13);\n    i0.ɵɵtemplate(4, MatrixComponent_div_8_button_4_Template, 2, 1, \"button\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 15);\n    i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_div_8_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.submitOrdinatesForm());\n    });\n    i0.ɵɵtemplate(6, MatrixComponent_div_8_div_6_Template, 8, 1, \"div\", 12);\n    i0.ɵɵtemplate(7, MatrixComponent_div_8_button_7_Template, 2, 1, \"button\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.matrixForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.matrixForm.errors == null ? null : ctx_r1.matrixForm.errors[\"backend\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.matrixForm.dirty && ctx_r1.matrixForm.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.ordinatesForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ordinatesForm.dirty && ctx_r1.ordinatesForm.valid && !ctx_r1.okToCompleteMatrixForm);\n  }\n}\nfunction MatrixComponent_div_9_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r29 = ctx.$implicit;\n    const i_r30 = ctx.index;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" x\", i_r30, \"=\", i0.ɵɵpipeBind2(3, 3, result_r29, \"1.0-4\"), \"\", i_r30 < ctx_r28.results.length - 1 ? \"\" : \"\", \" \");\n  }\n}\nfunction MatrixComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34);\n    i0.ɵɵtext(2, \" The solution is: \");\n    i0.ɵɵtemplate(3, MatrixComponent_div_9_span_3_Template, 4, 6, \"span\", 35);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results);\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, fbuilder, formb, formbOrdinates, apiService) {\n    this.fb = fb;\n    this.fbuilder = fbuilder;\n    this.formb = formb;\n    this.formbOrdinates = formbOrdinates;\n    this.apiService = apiService;\n    this.minSize = 2;\n    this.maxSize = 7;\n    this.rows = [];\n    this.cols = [];\n    this.results = [];\n    this.okToCompleteOrdinatesForm = false;\n    this.okToCompleteMatrixForm = true;\n    // ordinatesForm!: FormGroup;\n    this.profileForm = this.formb.group({\n      degree: ['']\n    });\n    //   matrixform: FormGroup = this.formb.group({\n    //     row: this.formb.array([])\n    // });\n    this.ordinatesForm = this.formbOrdinates.group({\n      row: this.formbOrdinates.array([])\n    });\n  }\n  ngOnInit() {\n    this.ordinatesForm.invalid;\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required, this.degreeValidator()]\n    });\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < this.degree; i++) {\n      for (let j = 0; j < this.degree; j++) {\n        const controlName = `cell${i}_${j}`;\n        this.matrixForm.addControl(controlName, new FormControl('', [Validators.required, Validators.pattern(/^-?\\d+(\\.\\d+)?$/), this.expressionValidator()]));\n      }\n    }\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < this.degree; i++) {\n      {\n        this.ordinatesForm.addControl('ordin' + i, new FormControl(''));\n      }\n    }\n    this.matrixForm.valueChanges.subscribe(() => {\n      //if(this.okToCompleteMatrixForm && !this.okToCompleteOrdinatesForm)\n      this.okToCompleteOrdinatesForm = false;\n    });\n  }\n  updateMatrixSize(degree) {\n    this.rows = Array.from({\n      length: degree\n    }, (_, i) => i);\n    this.cols = Array.from({\n      length: degree\n    }, (_, i) => i);\n    // Reset and rebuild the matrix form based on new degree\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < degree; i++) {\n      for (let j = 0; j < degree; j++) {\n        this.matrixForm.addControl(`cell${i}_${j}`, new FormControl('', [Validators.required, Validators.pattern(/^-?\\d+(\\.\\d+)?$/), this.expressionValidator()]));\n      }\n    }\n  }\n  updateOrdinatesSize(degree) {\n    // Reset and rebuild the ordinates form based on new degree\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < degree; i++) {\n      this.ordinatesForm.addControl(`ordin${i}`, new FormControl('', Validators.required));\n    }\n  }\n  // onSubmit1(): void {\n  //   const formData = this.profileForm.value;\n  //   this.apiService.postDegreeData(formData).subscribe({\n  //     next:response => console.log('ResponseDegree:', response),\n  //     error: error => console.error('Error:', error)\n  //   });\n  // }\n  onSubmit1() {\n    // Extract the degree directly from the form control.\n    const degreeControl = this.profileForm.get('degree');\n    const newDegree = degreeControl ? +degreeControl.value : 0;\n    if (newDegree >= this.minSize && newDegree <= this.maxSize) {\n      this.degree = newDegree;\n      this.updateMatrixSize(newDegree);\n      this.updateOrdinatesSize(newDegree);\n    }\n  }\n  submitMatrixForm() {\n    if (this.matrixForm.valid) {\n      // Proceed with submission\n    } else {\n      // Handle invalid form, e.g., by marking all fields as touched to show errors\n      this.matrixForm.markAllAsTouched();\n      console.log('Invalid matrix');\n    }\n    const matrixData = this.matrixForm.value;\n    console.log(this.matrixForm.value);\n    if (this.matrixForm.valid) {\n      this.matrixForm.disable();\n      this.okToCompleteOrdinatesForm = true;\n      this.okToCompleteMatrixForm = false;\n      // Process the valid form data\n      this.apiService.postMatrixData(matrixData).subscribe({\n        next: response => console.log('ResponseMatrix:', response),\n        error: error => {\n          console.log('error in submiting matrix -', error);\n          this.matrixForm.setErrors({\n            'backend': error.error.error\n          });\n        }\n      });\n    } else {\n      this.matrixForm.markAllAsTouched();\n      console.log('Invalid matrix');\n    }\n  }\n  submitOrdinatesForm() {\n    const ordinatesData = this.ordinatesForm.value;\n    if (this.ordinatesForm.valid && this.okToCompleteOrdinatesForm) {\n      this.matrixForm.enable();\n      this.okToCompleteOrdinatesForm = false;\n      this.okToCompleteMatrixForm = true;\n    }\n    console.log(this.ordinatesForm.value);\n    this.apiService.postOrdinatesData(ordinatesData).subscribe({\n      next: response => {\n        console.log('ResponseOrdinates:', response.solution);\n        this.results = [...response.solution];\n      },\n      error: error => console.error('Error:', error)\n    });\n  }\n  safeEvaluate(expression) {\n    try {\n      // Placeholder for safe evaluation logic\n      // e.g., using math.js: return math.evaluate(expression);\n      return eval(expression); // Note: Using eval() as a placeholder, not recommended for production\n    } catch {\n      return null; // Indicate failure to evaluate\n    }\n  }\n\n  expressionValidator() {\n    return control => {\n      const result = this.safeEvaluate(control.value); // Use the safe evaluation function\n      if (result === null || isNaN(result)) {\n        return {\n          'expressionInvalid': true\n        };\n      }\n      return null; // If the expression is valid and evaluates to a number\n    };\n  }\n\n  degreeValidator() {\n    return control => {\n      const result = control.value;\n      if (result < this.minSize || result > this.maxSize) {\n        return {\n          'expressionInvalid': true\n        };\n      }\n      return null;\n    };\n  }\n  onFieldBlur(controlName) {\n    const control = this.matrixForm.get(controlName);\n    if (control && !control.valid) {\n      // The control is invalid after the user leaves the field\n      // Here, you can implement any logic you need to signal the error to the user\n      // For example, you could set a flag to show an error message next to the field\n    }\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 10,\n    vars: 5,\n    consts: [[1, \"forms-container\"], [1, \"form-profile\"], [\"novalidate\", \"\", 1, \"profile\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"degree\"], [\"type\", \"number\", \"formControlName\", \"degree\", \"name\", \"degree\", \"placeholder\", \"degree\", 1, \"form-control\", \"round\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"btn\", \"btn-secondary\", 3, \"disabled\"], [\"class\", \"form-matrix\", \"style\", \"flex-direction:row\", 4, \"ngIf\"], [\"class\", \"badge badge-light container\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"form-matrix\", 2, \"flex-direction\", \"row\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"matrix-row\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-dark error-message\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary buttonwidth buttonsMargin\", 3, \"disabled\", 4, \"ngIf\"], [1, \"form-matrix\", \"form-ordinates\", 2, \"flex-direction\", \"column\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", \"class\", \"btn btn-primary buttonsMargin\", 3, \"disabled\", 4, \"ngIf\"], [1, \"matrix-row\"], [\"class\", \"matrix-cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"equalSign\"], [1, \"matrix-cell\"], [1, \"cell-container\"], [\"type\", \"number\", \"id\", \"cell\", \"required\", \"\", 1, \"cell-input\", 3, \"formControlName\", \"blur\"], [\"for\", \"cell\", 1, \"badge\", \"bg-secondary\", \"bgcell\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-dark\", \"error-message\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"buttonwidth\", \"buttonsMargin\", 3, \"disabled\"], [1, \"cell-input\"], [\"type\", \"number\", \"required\", \"\", 1, \"input-ordinate\", 3, \"formControlName\"], [1, \"badge\", \"bg-secondary\", \"bgcell\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"buttonsMargin\", 3, \"disabled\"], [1, \"badge\", \"badge-light\", \"container\"], [\"name\", \"response\", 1, \"results\"], [4, \"ngFor\", \"ngForOf\"], [1, \"solucionCell\", \"cellLeft\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit1();\n        });\n        i0.ɵɵelement(3, \"label\", 3)(4, \"input\", 4);\n        i0.ɵɵtemplate(5, MatrixComponent_div_5_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵtext(7, \"Enter\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(8, MatrixComponent_div_8_Template, 8, 7, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, MatrixComponent_div_9_Template, 4, 1, \"div\", 8);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.profileForm == null ? null : ctx.profileForm.touched) && (ctx.profileForm == null ? null : ctx.profileForm.errors == null ? null : ctx.profileForm.errors[\"expressionInvalid\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.profileForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.profileForm.value && ctx.profileForm.dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.ordinatesForm.dirty && ctx.ordinatesForm.valid && ctx.matrixForm.dirty && ctx.matrixForm.valid);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.DecimalPipe],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background-color: rgb(2, 14, 24);\\n}\\n\\n*[_ngcontent-%COMP%] {\\n  border-radius: 5px;\\n}\\n\\ninput[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  background-color: rgb(125, 138, 167);\\n  font-size: 1rem; \\n\\n  padding: 0.5em; \\n\\n  border: 1px solid #ccc;\\n}\\n\\n.cell-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  width: 70%;\\n}\\n\\n\\n\\n.ordinatesButton[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  \\n\\n  \\n\\n  \\n\\n}\\n\\n\\n\\n.formWithButton[_ngcontent-%COMP%] {\\n  margin: 0 0; \\n\\n  padding: 0;\\n  font-size: 1rem; \\n\\n}\\n\\n.bgcell[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  padding: 0%;\\n  margin: 0;\\n  flex-grow: 1;\\n  flex-basis: 0;\\n  font-size: 1.6em;\\n}\\n\\n.matrix-cell[_ngcontent-%COMP%] {\\n  width: 100%;\\n  flex: 1;\\n  margin: 0;\\n}\\n\\n.forms-container[_ngcontent-%COMP%] {\\n  font-size: 1em;\\n  width: 90%;\\n  margin: 10%;\\n}\\n\\n.profile[_ngcontent-%COMP%] {\\n  max-width: 14%;\\n  margin-bottom: 2%;\\n  margin-top: 3%;\\n  margin-left: 5%;\\n}\\n\\n.form-profile[_ngcontent-%COMP%] {\\n  width: 30%;\\n}\\n\\n.form-matrix[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.form-ordinates[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.matrix-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: flex-start;\\n  width: 100%;\\n}\\n\\n.cell-input[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.ordinates-row[_ngcontent-%COMP%] {\\n  font-size: 1em;\\n}\\n\\n.ordinates-cell[_ngcontent-%COMP%] {\\n  background-color: rgba(19, 102, 128, 0.89);\\n}\\n\\n.buttonwidth[_ngcontent-%COMP%] {\\n  width: 20%;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: rgb(155, 8, 8);\\n  background-color: chocolate;\\n  min-height: 20px;\\n}\\n\\n.error-placeholder[_ngcontent-%COMP%] {\\n  height: 20px;\\n  visibility: hidden;\\n}\\n\\n.results[_ngcontent-%COMP%] {\\n  color: rgb(226, 210, 190);\\n  background-color: rgb(155, 8, 8);\\n  text-align: left;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  margin-top: 0%;\\n  font-size: 2.5em;\\n  max-width: 100%;\\n  background-color: rgb(155, 8, 8);\\n  color: rgb(175, 132, 75);\\n  display: flex;\\n}\\n\\n.solutionCell[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n}\\n\\n.buttonsMargin[_ngcontent-%COMP%] {\\n  margin-top: 0px;\\n}\\n\\n.plusSign[_ngcontent-%COMP%] {\\n  color: rgb(224, 149, 224);\\n  font-size: 1.5em;\\n  display: flex;\\n}\\n\\n.equalSign[_ngcontent-%COMP%] {\\n  color: rgb(224, 149, 224);\\n  font-size: 1.5em;\\n}\\n\\n.hiddenPlus[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWF0cml4L21hdHJpeC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGdDQUFBO0FBQUY7O0FBR0M7RUFDRSxrQkFBQTtBQUFIOztBQUdBOztFQUVFLHdCQUFBO0FBQUY7O0FBR0E7RUFDRSxvQ0FBQTtFQUNBLGVBQUEsRUFBQSx1QkFBQTtFQUNBLGNBQUEsRUFBQSxnREFBQTtFQUNBLHNCQUFBO0FBQUY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0FBRkY7O0FBT0EsaUVBQUE7QUFHQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhDQUFBO0VBQ0MsMERBQUE7RUFDRCwyREFBQTtBQU5GOztBQVdBLDhFQUFBO0FBQ0E7RUFDRSxXQUFBLEVBQUEsb0JBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQSxFQUFBLDZCQUFBO0FBUkY7O0FBV0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFFQSxnQkFBQTtBQVRGOztBQVdBO0VBQ0UsV0FBQTtFQUNBLE9BQUE7RUFHQSxTQUFBO0FBVkY7O0FBZUE7RUFDRSxjQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7QUFaRjs7QUFtQkE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQWhCSjs7QUFxQkE7RUFDRSxVQUFBO0FBbEJGOztBQXFCQTtFQUNFLFdBQUE7RUFDQyxhQUFBO0VBQ0EsbUJBQUE7QUFsQkg7O0FBc0JBO0VBQ0csVUFBQTtBQW5CSDs7QUF3QkE7RUFDSSxhQUFBO0VBQ0EseUJBQUE7RUFLQSxXQUFBO0FBekJKOztBQTRCRTtFQUNFLFdBQUE7QUF6Qko7O0FBNkJFO0VBQ0UsY0FBQTtBQTFCSjs7QUE0QkU7RUFDRSwwQ0FBQTtBQXpCSjs7QUE0QkU7RUFDRSxVQUFBO0FBekJKOztBQTRCRTtFQUVFLHFCQUFBO0VBQ0EsMkJBQUE7RUFDQSxnQkFBQTtBQTFCSjs7QUE4QkU7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUEzQko7O0FBZ0NFO0VBRUUseUJBQUE7RUFDQSxnQ0FBQTtFQUNBLGdCQUFBO0FBOUJKOztBQWlDRTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxnQ0FBQTtFQUNBLHdCQUFBO0VBQ0EsYUFBQTtBQTlCSjs7QUFnQ0U7RUFFRSxhQUFBO0FBOUJKOztBQWlDRTtFQUNFLGVBQUE7QUE5Qko7O0FBaUNFO0VBQ0UseUJBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7QUE5Qko7O0FBa0NFO0VBQ0UseUJBQUE7RUFDQSxnQkFBQTtBQS9CSjs7QUFpQ0U7RUFDRSxrQkFBQTtBQTlCSiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5ib2R5e1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyLCAxNCwgMjQpO1xyXG4gIFxyXG59XHJcbiAqIHtcclxuICAgYm9yZGVyLXJhZGl1czo1cHg7XHJcbiB9XHJcblxyXG5pbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcclxuaW5wdXQ6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICBcclxufVxyXG5pbnB1dCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjUsIDEzOCwgMTY3LCAxKTtcclxuICBmb250LXNpemU6IDFyZW07IC8qIFJlbGF0aXZlIGZvbnQgc2l6ZSAqL1xyXG4gIHBhZGRpbmc6IDAuNWVtOyAvKiBSZWxhdGl2ZSBwYWRkaW5nLCBwcm92aWRlcyBpbnRlcm5hbCBzcGFjaW5nICovXHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxufVxyXG5cclxuXHJcblxyXG4uY2VsbC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246cm93O1xyXG4gIHdpZHRoOjcwJTtcclxuICBcclxuICBcclxufVxyXG5cclxuLyogQWRkaXRpb25hbCBjb250YWluZXIgc3R5bGVzIGZvciB2aXN1YWwgYWxpZ25tZW50IGFuZCBzcGFjaW5nICovXHJcblxyXG5cclxuLm9yZGluYXRlc0J1dHRvbiB7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOnJvdztcclxuICAvKiBBZGQgc29tZSBzcGFjaW5nIGJldHdlZW4gcm93cyBmb3IgY2xhcml0eSAqL1xyXG4gICAvKiBUaGlzIHdpbGwgbWFrZSBzdXJlIGFsbCBtYXRyaXggY2VsbHMgaGF2ZSBlcXVhbCB3aWR0aCAqL1xyXG4gIC8qIFByZXZlbnQgZmxleCBpdGVtcyBmcm9tIGdyb3dpbmcgYmV5b25kIHRoZWlyIGNvbnRhaW5lciAqL1xyXG59XHJcblxyXG5cclxuXHJcbi8qIFVzZSBlbSB1bml0cyBmb3IgbWFyZ2luLCBwYWRkaW5nLCBhbmQgcG9zc2libHkgYm9yZGVyIHdpZHRocyB3aGVyZSBuZWVkZWQgKi9cclxuLmZvcm1XaXRoQnV0dG9uIHtcclxuICBtYXJnaW46IDAgMDsgLyogRXhhbXBsZSBzcGFjaW5nICovXHJcbiAgcGFkZGluZzogMDtcclxuICBmb250LXNpemU6IDFyZW07IC8qIEtlZXAgZm9udCBzaXplcyByZWxhdGl2ZSAqL1xyXG59XHJcblxyXG4uYmdjZWxse1xyXG4gIHdpZHRoOjEwMCU7XHJcbiAgaGVpZ2h0OjEwMCU7XHJcbiAgcGFkZGluZzowJTtcclxuICBtYXJnaW46IDA7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIGZsZXgtYmFzaXM6IDA7XHJcbiAgXHJcbiAgZm9udC1zaXplOjEuNmVtO1xyXG59XHJcbi5tYXRyaXgtY2VsbHtcclxuICB3aWR0aDoxMDAlO1xyXG4gIGZsZXg6IDE7XHJcbiAgXHJcbiAgXHJcbiAgbWFyZ2luOjA7XHJcbn1cclxuXHJcblxyXG5cclxuLmZvcm1zLWNvbnRhaW5lcntcclxuICBmb250LXNpemU6MWVtO1xyXG4gIHdpZHRoOjkwJTtcclxuICBtYXJnaW46MTAlO1xyXG5cclxuICAvL2Rpc3BsYXk6ZmxleDtcclxuICAvL2ZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbn1cclxuXHJcblxyXG4ucHJvZmlsZXtcclxuICAgIG1heC13aWR0aDogMTQlO1xyXG4gICAgbWFyZ2luLWJvdHRvbToyJTtcclxuICAgIG1hcmdpbi10b3A6MyU7XHJcbiAgICBtYXJnaW4tbGVmdDo1JTtcclxufVxyXG5cclxuXHJcblxyXG4uZm9ybS1wcm9maWxle1xyXG4gIHdpZHRoOiAzMCU7XHJcbn1cclxuXHJcbi5mb3JtLW1hdHJpeHtcclxuICB3aWR0aDoxMDAlO1xyXG4gICBkaXNwbGF5OmZsZXg7XHJcbiAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgIC8vZmxleC1kaXJlY3Rpb246IGZsZXgtc3RhcnQ7XHJcbn1cclxuXHJcbi5mb3JtLW9yZGluYXRlc3tcclxuICAgd2lkdGg6NTAlO1xyXG59XHJcblxyXG5cclxuXHJcbi5tYXRyaXgtcm93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgXHJcbiAgICBcclxuICAgIC8vZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIC8vanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gIH1cclxuICBcclxuICAuY2VsbC1pbnB1dHtcclxuICAgIHdpZHRoOjEwMCU7IFxyXG4gIH1cclxuXHJcblxyXG4gIC5vcmRpbmF0ZXMtcm93e1xyXG4gICAgZm9udC1zaXplOjFlbTtcclxuICB9XHJcbiAgLm9yZGluYXRlcy1jZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxOSwgMTAyLCAxMjgsIDAuODkpO1xyXG4gIH1cclxuIFxyXG4gIC5idXR0b253aWR0aHtcclxuICAgIHdpZHRoOjIwJTtcclxuICB9XHJcblxyXG4gIC5lcnJvci1tZXNzYWdleyBcclxuICAgIFxyXG4gICAgY29sb3I6cmdiKDE1NSwgOCwgOCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjaG9jb2xhdGU7XHJcbiAgICBtaW4taGVpZ2h0OiAyMHB4OyBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgLmVycm9yLXBsYWNlaG9sZGVyIHtcclxuICAgIGhlaWdodDogMjBweDsgXHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgXHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIC5yZXN1bHRze1xyXG5cclxuICAgIGNvbG9yOnJnYigyMjYsIDIxMCwgMTkwKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxNTUsIDgsIDgpO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICB9XHJcblxyXG4gIC5jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOjAlO1xyXG4gICAgZm9udC1zaXplOjIuNWVtO1xyXG4gICAgbWF4LXdpZHRoOjEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU1LCA4LCA4KTtcclxuICAgIGNvbG9yOnJnYigxNzUsIDEzMiwgNzUpO1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gIH1cclxuICAuc29sdXRpb25DZWxse1xyXG4gICAgXHJcbiAgICBtYXJnaW4tdG9wOjA7XHJcbiAgfVxyXG5cclxuICAuYnV0dG9uc01hcmdpbntcclxuICAgIG1hcmdpbi10b3A6MHB4OyBcclxuICB9XHJcblxyXG4gIC5wbHVzU2lnbntcclxuICAgIGNvbG9yOnJnYigyMjQsIDE0OSwgMjI0KTtcclxuICAgIGZvbnQtc2l6ZToxLjVlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBcclxuICBcclxuICB9XHJcbiAgLmVxdWFsU2lnbntcclxuICAgIGNvbG9yOnJnYigyMjQsIDE0OSwgMjI0KTtcclxuICAgIGZvbnQtc2l6ZToxLjVlbTtcclxuICB9XHJcbiAgLmhpZGRlblBsdXMge1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","MatrixComponent_div_8_div_2_div_1_div_6_div_1_Template","MatrixComponent_div_8_div_2_div_1_div_6_div_2_Template","MatrixComponent_div_8_div_2_div_1_div_6_div_3_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r13","matrixForm","get","i_r9","j_r12","touched","errors","tmp_1_0","tmp_2_0","ɵɵlistener","MatrixComponent_div_8_div_2_div_1_Template_input_blur_2_listener","restoredCtx","ɵɵrestoreView","_r21","index","ɵɵnextContext","ctx_r19","ɵɵresetView","onFieldBlur","MatrixComponent_div_8_div_2_div_1_div_6_Template","ɵɵtextInterpolate1","ctx_r10","ɵɵclassMap","cols","length","MatrixComponent_div_8_div_2_div_1_Template","ctx_r3","ctx_r4","ctx_r5","invalid","okToCompleteMatrixForm","ɵɵelement","i_r24","ctx_r7","ordinatesForm","valid","MatrixComponent_div_8_Template_form_ngSubmit_1_listener","_r26","ctx_r25","submitMatrixForm","MatrixComponent_div_8_div_2_Template","MatrixComponent_div_8_div_3_Template","MatrixComponent_div_8_button_4_Template","MatrixComponent_div_8_Template_form_ngSubmit_5_listener","ctx_r27","submitOrdinatesForm","MatrixComponent_div_8_div_6_Template","MatrixComponent_div_8_button_7_Template","ctx_r1","rows","dirty","ɵɵtextInterpolate3","i_r30","ɵɵpipeBind2","result_r29","ctx_r28","results","MatrixComponent_div_9_span_3_Template","ctx_r2","MatrixComponent","constructor","fb","fbuilder","formb","formbOrdinates","apiService","minSize","maxSize","okToCompleteOrdinatesForm","profileForm","group","degree","row","array","ngOnInit","degreeForm","required","degreeValidator","i","j","controlName","addControl","pattern","expressionValidator","valueChanges","subscribe","updateMatrixSize","Array","from","_","updateOrdinatesSize","onSubmit1","degreeControl","newDegree","value","markAllAsTouched","console","log","matrixData","disable","postMatrixData","next","response","error","setErrors","ordinatesData","enable","postOrdinatesData","solution","safeEvaluate","expression","eval","control","result","isNaN","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","MatrixComponent_Template_form_ngSubmit_2_listener","MatrixComponent_div_5_Template","MatrixComponent_div_8_Template","MatrixComponent_div_9_Template"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl,  Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\n@Component({\r\n  selector: 'app-matrix',\r\n  templateUrl: './matrix.component.html',\r\n  styleUrls: ['./matrix.component.scss']\r\n})\r\n\r\nexport class MatrixComponent implements OnInit {\r\n \r\n  degreeForm!: FormGroup;\r\n  degree!:number; \r\n  minSize=2;\r\n  maxSize=7;\r\n  matrixForm!: FormGroup;\r\n  rows:number[] = [];\r\n  cols:number[] = [];\r\n  results:number[]  = []\r\n  okToCompleteOrdinatesForm:boolean = false;\r\n  okToCompleteMatrixForm:boolean = true;\r\n\r\n // ordinatesForm!: FormGroup;\r\n  \r\n  profileForm = this.formb.group({\r\n    degree: [''],\r\n  });\r\n\r\n//   matrixform: FormGroup = this.formb.group({\r\n//     row: this.formb.array([])\r\n// });\r\n\r\n ordinatesForm: FormGroup = this.formbOrdinates.group({\r\n  row: this.formbOrdinates.array([])\r\n })\r\n\r\n\r\n  constructor(private fb: FormBuilder, private fbuilder:FormBuilder,  private formb: FormBuilder, private formbOrdinates: FormBuilder,\r\n     private apiService: ApiService) {\r\n    \r\n  }\r\n\r\n   \r\n  ngOnInit(): void {\r\n    this.ordinatesForm.invalid;\r\n    this.degreeForm = this.fb.group({\r\n      degree: [this.degree, \r\n               Validators.required,\r\n               this.degreeValidator()]\r\n    });\r\n\r\n    this.profileForm = this.fb.group({\r\n      degree: ['']\r\n    });\r\n\r\n\r\n    this.matrixForm = this.formb.group({});\r\n    for (let i = 0; i < this.degree; i++) {\r\n      for (let j = 0; j < this.degree; j++) {\r\n          const controlName = `cell${i}_${j}`;\r\n          this.matrixForm.addControl(controlName, new FormControl('', [\r\n              Validators.required,\r\n              Validators.pattern(/^-?\\d+(\\.\\d+)?$/),// Only numeric values alowed \r\n              this.expressionValidator() \r\n          ]));\r\n      }\r\n  }\r\n\r\n    this.ordinatesForm = this.formb.group({});\r\n    for (let i = 0; i < this.degree; i++) {\r\n      {\r\n        this.ordinatesForm.addControl('ordin' + i , new FormControl(''));\r\n      }\r\n    }\r\n\r\n    this.matrixForm.valueChanges.subscribe(() => {  \r\n      //if(this.okToCompleteMatrixForm && !this.okToCompleteOrdinatesForm)\r\n        this.okToCompleteOrdinatesForm = false;\r\n    });\r\n\r\n  }\r\n    \r\n  private updateMatrixSize(degree: number): void {\r\n    this.rows = Array.from({length: degree}, (_, i) => i);\r\n    this.cols = Array.from({length: degree}, (_, i) => i);\r\n  \r\n    // Reset and rebuild the matrix form based on new degree\r\n    this.matrixForm = this.formb.group({});\r\n    for (let i = 0; i < degree; i++) {\r\n      for (let j = 0; j < degree; j++) {\r\n        this.matrixForm.addControl(`cell${i}_${j}`, new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(/^-?\\d+(\\.\\d+)?$/),\r\n          this.expressionValidator()\r\n        ]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  private updateOrdinatesSize(degree: number): void {\r\n    // Reset and rebuild the ordinates form based on new degree\r\n    this.ordinatesForm = this.formb.group({});\r\n    for (let i = 0; i < degree; i++) {\r\n      this.ordinatesForm.addControl(`ordin${i}`, new FormControl('', Validators.required));\r\n    }\r\n  }\r\n\r\n    // onSubmit1(): void {\r\n    //   const formData = this.profileForm.value;\r\n    //   this.apiService.postDegreeData(formData).subscribe({\r\n    //     next:response => console.log('ResponseDegree:', response),\r\n    //     error: error => console.error('Error:', error)\r\n    //   });\r\n    // }\r\n\r\n    onSubmit1(): void {\r\n      // Extract the degree directly from the form control.\r\n      const degreeControl = this.profileForm.get('degree');\r\n      const newDegree = degreeControl ? +degreeControl.value! : 0;\r\n      if (newDegree >= this.minSize && newDegree <= this.maxSize)  {\r\n        this.degree = newDegree;\r\n        this.updateMatrixSize(newDegree);\r\n        this.updateOrdinatesSize(newDegree);\r\n      }\r\n    }\r\n\r\n    submitMatrixForm():void {\r\n      if (this.matrixForm.valid) {\r\n        // Proceed with submission\r\n      } else {\r\n        // Handle invalid form, e.g., by marking all fields as touched to show errors\r\n        this.matrixForm.markAllAsTouched();\r\n        console.log('Invalid matrix');\r\n      }\r\n      const matrixData = this.matrixForm.value;\r\n      console.log(this.matrixForm.value);\r\n      if (this.matrixForm.valid) {\r\n        this.matrixForm.disable();\r\n        this.okToCompleteOrdinatesForm = true;\r\n        this.okToCompleteMatrixForm = false;\r\n        // Process the valid form data\r\n        this.apiService.postMatrixData(matrixData).subscribe({\r\n          next: response => console.log('ResponseMatrix:', response),\r\n          error: error => {\r\n            console.log('error in submiting matrix -', error);\r\n            this.matrixForm.setErrors({ 'backend': error.error.error });\r\n          }\r\n        });\r\n      } \r\n      else {    \r\n         this.matrixForm.markAllAsTouched();\r\n         console.log('Invalid matrix');\r\n      }\r\n    }\r\n\r\n    submitOrdinatesForm():void {\r\n        const ordinatesData = this.ordinatesForm.value;\r\n        if (this.ordinatesForm.valid && this.okToCompleteOrdinatesForm){\r\n          this.matrixForm.enable();\r\n          this.okToCompleteOrdinatesForm = false;\r\n          this.okToCompleteMatrixForm = true;\r\n        }\r\n        console.log(this.ordinatesForm.value);\r\n        this.apiService.postOrdinatesData(ordinatesData).subscribe({\r\n           next: response => { \r\n                               console.log('ResponseOrdinates:', response.solution);\r\n                               this.results = [...response.solution];\r\n                            },\r\n                           \r\n           error: error => console.error('Error:', error)\r\n        })\r\n    }\r\n    \r\n    safeEvaluate(expression: string): number | null {\r\n      try {\r\n        // Placeholder for safe evaluation logic\r\n        // e.g., using math.js: return math.evaluate(expression);\r\n        return eval(expression); // Note: Using eval() as a placeholder, not recommended for production\r\n      } catch {\r\n        return null; // Indicate failure to evaluate\r\n      }\r\n    }\r\n\r\n    expressionValidator(): ValidatorFn {\r\n      return (control: AbstractControl): ValidationErrors | null => {\r\n        const result = this.safeEvaluate(control.value); // Use the safe evaluation function\r\n        if (result === null || isNaN(result)) {\r\n          return { 'expressionInvalid': true };\r\n        }\r\n        return null; // If the expression is valid and evaluates to a number\r\n      };\r\n    }\r\n\r\n    degreeValidator(): ValidatorFn {\r\n      return (control: AbstractControl): ValidationErrors | null => {\r\n        const result = control.value;\r\n        if (result < this.minSize || result > this.maxSize ){\r\n          return {'expressionInvalid' : true}\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n\r\n    onFieldBlur(controlName: string): void {\r\n      const control = this.matrixForm.get(controlName);\r\n      if (control && !control.valid) {\r\n        \r\n        // The control is invalid after the user leaves the field\r\n        // Here, you can implement any logic you need to signal the error to the user\r\n        // For example, you could set a flag to show an error message next to the field\r\n      }\r\n    }\r\n         \r\n\r\n}\r\n\r\n","<div class=\"forms-container\">\r\n    <div class=\"form-profile\">\r\n        <form  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit1()\" class=\"profile\" novalidate >\r\n            <label name= \"degree\"></label>\r\n            <input type=\"number\" formControlName = \"degree\" name=\"degree\" class =\"form-control round\" placeholder=\"degree\">\r\n          \r\n            <div *ngIf=\"profileForm?.touched && profileForm?.errors?.['expressionInvalid']\"\r\n                  class=\"alert alert-danger\">\r\n                         degree must be an integer between 2 and 7\r\n            </div>\r\n         \r\n            <button [disabled]=\"profileForm.invalid\" class=\"btn btn-secondary\">Enter</button>\r\n        </form>\r\n    </div>\r\n    <div *ngIf=\"profileForm.value && profileForm.dirty\" class=\"form-matrix\" style=\"flex-direction:row\" >\r\n        <form [formGroup]=\"matrixForm\" (ngSubmit)=\"submitMatrixForm()\">\r\n            \r\n                <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row\">\r\n                    <div *ngFor=\"let col of cols; let j = index\" class=\"matrix-cell\">\r\n                        <div class=\"cell-container\">\r\n                            <input type=\"number\" \r\n                                  [formControlName]=\"'cell' + i + '_' + j\" \r\n                                  class=\"cell-input\"\r\n                                  id=\"cell\"\r\n                                  (blur)=\"onFieldBlur('cell' + i + '_' + j)\"\r\n                                  required>\r\n                            <span>\r\n                              <label for=\"cell\" class=\"badge bg-secondary bgcell\" > x{{j+1}}</label>\r\n                            </span>\r\n                            <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\" class=\"error-message\"> \r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.touched && matrixForm.get('cell' + i + '_' + j)?.errors?.['expressionInvalid']\"\r\n                                  class=\"alert alert-danger\">\r\n                                    Numbers only!\r\n                                </div>\r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['required']\">Cell is required.</div>\r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\">Only numbers are allowed!</div>\r\n                            </div>\r\n                           \r\n                            <div [class]=\"j < cols.length - 1 ? 'plusSign' : 'plusSign hiddenPlus'\">+</div>\r\n                            \r\n                            <!--<div *ngIf=\"j < degree-1 \" class=\"plusSign\">+</div>-->\r\n                        </div>\r\n                    </div> <span class=\"equalSign\">=</span> \r\n                </div>\r\n                <div *ngIf=\"matrixForm.errors?.['backend']\" class=\"alert alert-dark error-message\" role=\"alert\" >\r\n                    {{ matrixForm.errors?.['backend'] }}\r\n                </div>\r\n                <button *ngIf=\"matrixForm.dirty && matrixForm.valid\" \r\n                        [disabled]=\"matrixForm.invalid || !this.okToCompleteMatrixForm\" \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary buttonwidth buttonsMargin\"\r\n                >Submit</button>\r\n        </form>\r\n        \r\n            <form [formGroup]=\"ordinatesForm\"  (ngSubmit) = \"submitOrdinatesForm()\" class=\"form-matrix form-ordinates\" style=\"flex-direction:column\">  <!--form-ordinates   ordinates-row-->\r\n                <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row\" > <!--ordinates-row              form-control rounded ordinates-cell-->\r\n                    <div class=\"matrix-cell\">\r\n                        <div class=\"cell-container\">\r\n                            <div class=\"cell-input\">\r\n                                \r\n                              <input type =\"number\"   [formControlName]=\"'ordin'+ i\" class=\"input-ordinate\" required />\r\n                              <span><label class=\"badge bg-secondary bgcell\"></label>x</span>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button *ngIf=\"ordinatesForm.dirty && ordinatesForm.valid && !okToCompleteMatrixForm\" \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary buttonsMargin\" \r\n                        [disabled]=\"!this.ordinatesForm.valid\"\r\n                >Submit</button>\r\n            </form>\r\n        \r\n    </div>\r\n    \r\n</div>\r\n<div *ngIf=\"ordinatesForm.dirty && ordinatesForm.valid && \r\n            matrixForm.dirty && matrixForm.valid\"   class=\"badge badge-light container\">\r\n    <div class=\"results\" name=\"response\">\r\n        The solution is: \r\n        <span *ngFor=\"let result of results; let i = index\">\r\n            <div class=\"solucionCell cellLeft\">\r\n                    x{{i}}={{result| number:'1.0-4'}}{{i < results.length - 1 ? '' : ''}}\r\n            </div>        \r\n        </span> \r\n    </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}