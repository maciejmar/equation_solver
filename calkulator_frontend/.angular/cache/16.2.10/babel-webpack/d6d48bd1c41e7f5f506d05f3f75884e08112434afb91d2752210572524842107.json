{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" degree must be an integer between 2 and 7 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_3_div_1_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Numbers only! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_3_div_1_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Cell is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_3_div_1_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only numbers are allowed!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_3_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, MatrixComponent_div_8_div_3_div_1_div_5_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, MatrixComponent_div_8_div_3_div_1_div_5_div_2_Template, 2, 0, \"div\", 29);\n    i0.ɵɵtemplate(3, MatrixComponent_div_8_div_3_div_1_div_5_div_3_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r12 = i0.ɵɵnextContext().index;\n    const i_r9 = i0.ɵɵnextContext().index;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_0_0.touched) && ((tmp_0_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"expressionInvalid\"]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r13.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n  }\n}\nfunction MatrixComponent_div_8_div_3_div_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"+\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_8_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"input\", 24);\n    i0.ɵɵlistener(\"blur\", function MatrixComponent_div_8_div_3_div_1_Template_input_blur_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const j_r12 = restoredCtx.index;\n      const i_r9 = i0.ɵɵnextContext().index;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onFieldBlur(\"cell\" + i_r9 + \"_\" + j_r12));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, MatrixComponent_div_8_div_3_div_1_div_5_Template, 4, 3, \"div\", 26);\n    i0.ɵɵtemplate(6, MatrixComponent_div_8_div_3_div_1_span_6_Template, 2, 0, \"span\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const j_r12 = ctx.index;\n    const i_r9 = i0.ɵɵnextContext().index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"cell\" + i_r9 + \"_\" + j_r12);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" x\", j_r12 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r10.matrixForm.get(\"cell\" + i_r9 + \"_\" + j_r12)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", j_r12 < ctx_r10.degree - 1);\n  }\n}\nfunction MatrixComponent_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, MatrixComponent_div_8_div_3_div_1_Template, 7, 4, \"div\", 20);\n    i0.ɵɵelementStart(2, \"span\", 21);\n    i0.ɵɵtext(3, \"=\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cols);\n  }\n}\nfunction MatrixComponent_div_8_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.matrixForm.errors == null ? null : ctx_r4.matrixForm.errors[\"backend\"], \" \");\n  }\n}\nfunction MatrixComponent_div_8_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.matrixForm.invalid);\n  }\n}\nfunction MatrixComponent_div_8_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"input\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r25 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", \"ordin\" + i_r25);\n  }\n}\nfunction MatrixComponent_div_8_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r7.ordinatesForm.valid);\n  }\n}\nfunction MatrixComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_div_8_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.submitMatrixForm());\n    });\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵtemplate(3, MatrixComponent_div_8_div_3_Template, 4, 1, \"div\", 13);\n    i0.ɵɵtemplate(4, MatrixComponent_div_8_div_4_Template, 2, 1, \"div\", 14);\n    i0.ɵɵtemplate(5, MatrixComponent_div_8_button_5_Template, 2, 1, \"button\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 16)(7, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_div_8_Template_form_ngSubmit_7_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.submitOrdinatesForm());\n    });\n    i0.ɵɵtemplate(8, MatrixComponent_div_8_div_8_Template, 2, 1, \"div\", 17);\n    i0.ɵɵtemplate(9, MatrixComponent_div_8_button_9_Template, 2, 1, \"button\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.matrixForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.matrixForm.errors == null ? null : ctx_r1.matrixForm.errors[\"backend\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.matrixForm.dirty && ctx_r1.matrixForm.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.ordinatesForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ordinatesForm.dirty && ctx_r1.ordinatesForm.valid && ctx_r1.matrixForm.dirty && ctx_r1.matrixForm.valid);\n  }\n}\nfunction MatrixComponent_div_9_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"div\", 38);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r30 = ctx.$implicit;\n    const i_r31 = ctx.index;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" x\", i_r31, \"=\", i0.ɵɵpipeBind2(3, 3, result_r30, \"1.0-4\"), \"\", i_r31 < ctx_r29.results.length - 1 ? \"\" : \"\", \" \");\n  }\n}\nfunction MatrixComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36);\n    i0.ɵɵtext(2, \" The solution is: \");\n    i0.ɵɵtemplate(3, MatrixComponent_div_9_span_3_Template, 4, 6, \"span\", 37);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results);\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, fbuilder, formb, formbOrdinates, apiService) {\n    this.fb = fb;\n    this.fbuilder = fbuilder;\n    this.formb = formb;\n    this.formbOrdinates = formbOrdinates;\n    this.apiService = apiService;\n    this.minSize = 2;\n    this.maxSize = 7;\n    this.rows = [];\n    this.cols = [];\n    this.results = [];\n    this.okToCompleteOrdinatesForm = false;\n    // ordinatesForm!: FormGroup;\n    this.profileForm = this.formb.group({\n      degree: ['']\n    });\n    //   matrixform: FormGroup = this.formb.group({\n    //     row: this.formb.array([])\n    // });\n    this.ordinatesForm = this.formbOrdinates.group({\n      row: this.formbOrdinates.array([])\n    });\n  }\n  ngOnInit() {\n    this.ordinatesForm.invalid;\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required, this.degreeValidator()]\n    });\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < this.degree; i++) {\n      for (let j = 0; j < this.degree; j++) {\n        const controlName = `cell${i}_${j}`;\n        this.matrixForm.addControl(controlName, new FormControl('', [Validators.required, Validators.pattern(/^-?\\d+(\\.\\d+)?$/), this.expressionValidator()]));\n      }\n    }\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < this.degree; i++) {\n      {\n        this.ordinatesForm.addControl('ordin' + i, new FormControl(''));\n      }\n    }\n  }\n  updateMatrixSize(degree) {\n    this.rows = Array.from({\n      length: degree\n    }, (_, i) => i);\n    this.cols = Array.from({\n      length: degree\n    }, (_, i) => i);\n    // Reset and rebuild the matrix form based on new degree\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < degree; i++) {\n      for (let j = 0; j < degree; j++) {\n        this.matrixForm.addControl(`cell${i}_${j}`, new FormControl('', [Validators.required, Validators.pattern(/^-?\\d+(\\.\\d+)?$/), this.expressionValidator()]));\n      }\n    }\n  }\n  updateOrdinatesSize(degree) {\n    // Reset and rebuild the ordinates form based on new degree\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < degree; i++) {\n      this.ordinatesForm.addControl(`ordin${i}`, new FormControl('', Validators.required));\n    }\n  }\n  // onSubmit1(): void {\n  //   const formData = this.profileForm.value;\n  //   this.apiService.postDegreeData(formData).subscribe({\n  //     next:response => console.log('ResponseDegree:', response),\n  //     error: error => console.error('Error:', error)\n  //   });\n  // }\n  onSubmit1() {\n    // Extract the degree directly from the form control.\n    const degreeControl = this.profileForm.get('degree');\n    const newDegree = degreeControl ? +degreeControl.value : 0;\n    if (newDegree >= this.minSize && newDegree <= this.maxSize) {\n      this.degree = newDegree;\n      this.updateMatrixSize(newDegree);\n      this.updateOrdinatesSize(newDegree);\n    }\n  }\n  submitMatrixForm() {\n    if (this.matrixForm.valid) {\n      // Proceed with submission\n    } else {\n      // Handle invalid form, e.g., by marking all fields as touched to show errors\n      this.matrixForm.markAllAsTouched();\n      console.log('Invalid matrix');\n    }\n    const matrixData = this.matrixForm.value;\n    console.log(this.matrixForm.value);\n    if (this.matrixForm.valid) {\n      this.matrixForm.disable();\n      this.okToCompleteOrdinatesForm = true;\n      // Process the valid form data\n      this.apiService.postMatrixData(matrixData).subscribe({\n        next: response => console.log('ResponseMatrix:', response),\n        error: error => {\n          console.log('error in submiting matrix -', error);\n          this.matrixForm.setErrors({\n            'backend': error.error.error\n          });\n        }\n      });\n    } else {\n      this.matrixForm.markAllAsTouched();\n      console.log('Invalid matrix');\n    }\n  }\n  submitOrdinatesForm() {\n    const ordinatesData = this.ordinatesForm.value;\n    this.matrixForm.enable();\n    this.okToCompleteOrdinatesForm = false;\n    console.log(this.ordinatesForm.value);\n    this.apiService.postOrdinatesData(ordinatesData).subscribe({\n      next: response => {\n        console.log('ResponseOrdinates:', response.solution);\n        this.results = [...response.solution];\n      },\n      error: error => console.error('Error:', error)\n    });\n  }\n  safeEvaluate(expression) {\n    try {\n      // Placeholder for safe evaluation logic\n      // e.g., using math.js: return math.evaluate(expression);\n      return eval(expression); // Note: Using eval() as a placeholder, not recommended for production\n    } catch {\n      return null; // Indicate failure to evaluate\n    }\n  }\n\n  expressionValidator() {\n    return control => {\n      const result = this.safeEvaluate(control.value); // Use the safe evaluation function\n      if (result === null || isNaN(result)) {\n        return {\n          'expressionInvalid': true\n        };\n      }\n      return null; // If the expression is valid and evaluates to a number\n    };\n  }\n\n  degreeValidator() {\n    return control => {\n      const result = control.value;\n      if (result < this.minSize || result > this.maxSize) {\n        return {\n          'expressionInvalid': true\n        };\n      }\n      return null;\n    };\n  }\n  onFieldBlur(controlName) {\n    const control = this.matrixForm.get(controlName);\n    if (control && !control.valid) {\n      // The control is invalid after the user leaves the field\n      // Here, you can implement any logic you need to signal the error to the user\n      // For example, you could set a flag to show an error message next to the field\n    }\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 10,\n    vars: 5,\n    consts: [[1, \"forms-container\"], [1, \"form-profile\"], [\"novalidate\", \"\", 1, \"profile\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"degree\"], [\"type\", \"number\", \"formControlName\", \"degree\", \"name\", \"degree\", \"placeholder\", \"degree here\", 1, \"form-control\", \"round\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"btn\", \"btn-secondary\", 3, \"disabled\"], [\"class\", \"form-matrix\", 4, \"ngIf\"], [\"class\", \"badge badge-light container\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"form-matrix\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"formWithButton\"], [\"class\", \"matrix-row\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-dark error-message\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary buttonwidth buttonsMargin\", 3, \"disabled\", 4, \"ngIf\"], [1, \"formWithButton\", \"rowContentStart\"], [\"class\", \"matrix-row ordinatesButton\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary buttonsMargin\", 3, \"disabled\", 4, \"ngIf\"], [1, \"matrix-row\"], [\"class\", \"matrix-cell\", 4, \"ngFor\", \"ngForOf\"], [2, \"color\", \"rgb(224, 149, 224)\", \"font-size\", \"1.5em\"], [1, \"matrix-cell\"], [1, \"cell-container\"], [\"type\", \"number\", \"id\", \"cell\", \"required\", \"\", 1, \"form-control\", 3, \"formControlName\", \"blur\"], [\"for\", \"cell\", 1, \"badge\", \"bg-secondary\", \"bgcell\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"style\", \"color:rgb(224, 149, 224);font-size:1.5em\", 4, \"ngIf\"], [1, \"error-message\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-dark\", \"error-message\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"buttonwidth\", \"buttonsMargin\", 3, \"disabled\"], [1, \"matrix-row\", \"ordinatesButton\"], [\"type\", \"number\", \"required\", \"\", 1, \"form-control\", 2, \"width\", \"40%\", 3, \"formControlName\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"buttonsMargin\", 3, \"disabled\"], [1, \"badge\", \"badge-light\", \"container\"], [\"name\", \"response\", 1, \"results\"], [4, \"ngFor\", \"ngForOf\"], [1, \"solucionCell\", \"cellLeft\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit1();\n        });\n        i0.ɵɵelement(3, \"label\", 3)(4, \"input\", 4);\n        i0.ɵɵtemplate(5, MatrixComponent_div_5_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵtext(7, \"Enter\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(8, MatrixComponent_div_8_Template, 10, 7, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, MatrixComponent_div_9_Template, 4, 1, \"div\", 8);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.profileForm == null ? null : ctx.profileForm.touched) && (ctx.profileForm == null ? null : ctx.profileForm.errors == null ? null : ctx.profileForm.errors[\"expressionInvalid\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.profileForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.profileForm.value && ctx.profileForm.dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.ordinatesForm.dirty && ctx.ordinatesForm.valid && ctx.matrixForm.dirty && ctx.matrixForm.valid);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.DecimalPipe],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background-color: rgb(2, 14, 24);\\n}\\n\\ninput[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  background-color: rgb(125, 138, 167);\\n}\\n\\n.badge[_ngcontent-%COMP%] {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.bgcell[_ngcontent-%COMP%] {\\n  text-align: center;\\n  align-items: center;\\n  font-size: 1.5em;\\n}\\n\\n.profile[_ngcontent-%COMP%] {\\n  max-width: 14%;\\n  margin-bottom: 2%;\\n  margin-top: 3%;\\n  margin-left: 5%;\\n}\\n\\n.forms-container[_ngcontent-%COMP%] {\\n  margin-top: 0%;\\n  margin-left: 0%;\\n  margin-bottom: 0;\\n  margin-right: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.form-profile[_ngcontent-%COMP%] {\\n  width: 30%;\\n}\\n\\n.form-matrix[_ngcontent-%COMP%] {\\n  width: 70%;\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.form-ordinates[_ngcontent-%COMP%] {\\n  width: 20%;\\n}\\n\\n.matrix-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.matrix-cell[_ngcontent-%COMP%] {\\n  margin: 0 0%;\\n  width: 45%;\\n  border-style: solid rgb(49, 49, 141);\\n}\\n\\n.cell-container[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.ordinates-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 20%;\\n}\\n\\n.ordinates-cell[_ngcontent-%COMP%] {\\n  background-color: rgba(19, 102, 128, 0.89);\\n  margin-top: 10%;\\n  margin-bottom: 10%;\\n  padding: 0;\\n}\\n\\n.input-ordinate[_ngcontent-%COMP%] {\\n  background-color: rgb(230, 231, 168);\\n  width: 100%;\\n}\\n\\n.formWithButton[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n}\\n\\n.buttonwidth[_ngcontent-%COMP%] {\\n  width: 20%;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  margin: 3%;\\n  color: rgb(155, 8, 8);\\n  background-color: chocolate;\\n}\\n\\n.results[_ngcontent-%COMP%] {\\n  color: rgb(226, 210, 190);\\n  background-color: rgb(155, 8, 8);\\n  text-align: left;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  margin-top: 5%;\\n  font-size: 2.5em;\\n  max-width: 40%;\\n  background-color: rgb(155, 8, 8);\\n  color: rgb(175, 132, 75);\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n}\\n\\n.solutionCell[_ngcontent-%COMP%] {\\n  justify-content: flex-start;\\n}\\n\\n.ordinatesButton[_ngcontent-%COMP%] {\\n  justify-content: flex-start;\\n}\\n\\n.buttonsMargin[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.rowContentStart[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-start;\\n}\\n\\n.cellLeft[_ngcontent-%COMP%] {\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWF0cml4L21hdHJpeC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGdDQUFBO0FBQUY7O0FBR0E7O0VBRUUsd0JBQUE7RUFDQSxTQUFBO0FBQUY7O0FBR0E7RUFDSSxvQ0FBQTtBQUFKOztBQUdBO0VBQ0Msa0JBQUE7RUFDQSxtQkFBQTtBQUFEOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFFQTtFQUNFLFVBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNBLFVBQUE7QUFDQTs7QUFLQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtBQUZKOztBQU1FO0VBQ0UsWUFBQTtFQUNBLFVBQUE7RUFFQSxvQ0FBQTtBQUpKOztBQVFFO0VBQ0UsYUFBQTtBQUxKOztBQVFFO0VBQ0MsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQUxIOztBQU9FO0VBQ0UsMENBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0FBSko7O0FBUUU7RUFDRSxvQ0FBQTtFQUNBLFdBQUE7QUFMSjs7QUFRRTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQUxKOztBQU9FO0VBQ0UsVUFBQTtBQUpKOztBQU9FO0VBQ0UsVUFBQTtFQUNBLHFCQUFBO0VBQ0EsMkJBQUE7QUFKSjs7QUFPRTtFQUVFLHlCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxnQkFBQTtBQUxKOztBQVNFO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGdDQUFBO0VBQ0Esd0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSwyQkFBQTtBQU5KOztBQVNFO0VBQ0UsMkJBQUE7QUFOSjs7QUFTRTtFQUNFLDJCQUFBO0FBTko7O0FBUUU7RUFDRSxnQkFBQTtBQUxKOztBQU9FO0VBQ0UsYUFBQTtFQUNBLDJCQUFBO0FBSko7O0FBTUU7RUFDRSxnQkFBQTtBQUhKIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmJvZHl7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIsIDE0LCAyNCk7XHJcbn1cclxuXHJcbmlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuaW5wdXR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyNSwgMTM4LCAxNjcsMSk7XHJcbn1cclxuXHJcbi5iYWRnZXtcclxuIHRleHQtYWxpZ246ICBjZW50ZXI7XHJcbiBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5iZ2NlbGx7XHJcbiAgICB0ZXh0LWFsaWduOiAgY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxLjVlbTtcclxufVxyXG5cclxuLnByb2ZpbGV7XHJcbiAgICBtYXgtd2lkdGg6IDE0JTtcclxuICAgIG1hcmdpbi1ib3R0b206MiU7XHJcbiAgICBtYXJnaW4tdG9wOjMlO1xyXG4gICAgbWFyZ2luLWxlZnQ6NSU7XHJcbn1cclxuXHJcbi5mb3Jtcy1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOjAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTowO1xyXG4gICAgbWFyZ2luLXJpZ2h0OjA7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG59XHJcblxyXG4uZm9ybS1wcm9maWxle1xyXG4gIHdpZHRoOiAzMCU7XHJcbn1cclxuXHJcbi5mb3JtLW1hdHJpeHtcclxuICB3aWR0aDo3MCU7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbn1cclxuXHJcbi5mb3JtLW9yZGluYXRlc3tcclxud2lkdGg6MjAlO1xyXG4vL2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xyXG59XHJcblxyXG5cclxuXHJcbi5tYXRyaXgtcm93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIFxyXG4gIH1cclxuICBcclxuICAubWF0cml4LWNlbGwge1xyXG4gICAgbWFyZ2luOiAwIDAlO1xyXG4gICAgd2lkdGg6NDUlO1xyXG4gICAgXHJcbiAgICBib3JkZXItc3R5bGU6c29saWQgcmdiKDQ5LCA0OSwgMTQxKTtcclxuICAgIFxyXG4gIH1cclxuICBcclxuICAuY2VsbC1jb250YWluZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuXHJcbiAgLm9yZGluYXRlcy1yb3d7XHJcbiAgIGRpc3BsYXk6ZmxleDtcclxuICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgd2lkdGg6MjAlO1xyXG4gIH1cclxuICAub3JkaW5hdGVzLWNlbGx7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE5LCAxMDIsIDEyOCwgMC44OSk7XHJcbiAgICBtYXJnaW4tdG9wOiAxMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOjEwJTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBcclxuICAgIFxyXG4gIH1cclxuICAuaW5wdXQtb3JkaW5hdGV7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzMCwgMjMxLCAxNjgsIDEpO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICB9XHJcblxyXG4gIC5mb3JtV2l0aEJ1dHRvbntcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gIH1cclxuICAuYnV0dG9ud2lkdGh7XHJcbiAgICB3aWR0aDoyMCU7XHJcbiAgfVxyXG5cclxuICAuZXJyb3ItbWVzc2FnZXsgXHJcbiAgICBtYXJnaW46MyU7XHJcbiAgICBjb2xvcjpyZ2IoMTU1LCA4LCA4KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGNob2NvbGF0ZTtcclxuICB9XHJcbiAgXHJcbiAgLnJlc3VsdHN7XHJcblxyXG4gICAgY29sb3I6cmdiKDIyNiwgMjEwLCAxOTApO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE1NSwgOCwgOCk7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgXHJcbiAgfVxyXG5cclxuICAuY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDo1JTtcclxuICAgIGZvbnQtc2l6ZToyLjVlbTtcclxuICAgIG1heC13aWR0aDo0MCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU1LCA4LCA4KTtcclxuICAgIGNvbG9yOnJnYigxNzUsIDEzMiwgNzUpO1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246cm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgXHJcbiAgfVxyXG4gIC5zb2x1dGlvbkNlbGx7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgfVxyXG5cclxuICAub3JkaW5hdGVzQnV0dG9ue1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxuICAuYnV0dG9uc01hcmdpbntcclxuICAgIG1hcmdpbi10b3A6MjBweDtcclxuICB9XHJcbiAgLnJvd0NvbnRlbnRTdGFydHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgfVxyXG4gIC5jZWxsTGVmdHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","MatrixComponent_div_8_div_3_div_1_div_5_div_1_Template","MatrixComponent_div_8_div_3_div_1_div_5_div_2_Template","MatrixComponent_div_8_div_3_div_1_div_5_div_3_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r13","matrixForm","get","i_r9","j_r12","touched","errors","tmp_1_0","tmp_2_0","ɵɵlistener","MatrixComponent_div_8_div_3_div_1_Template_input_blur_2_listener","restoredCtx","ɵɵrestoreView","_r22","index","ɵɵnextContext","ctx_r20","ɵɵresetView","onFieldBlur","MatrixComponent_div_8_div_3_div_1_div_5_Template","MatrixComponent_div_8_div_3_div_1_span_6_Template","ɵɵtextInterpolate1","ctx_r10","degree","MatrixComponent_div_8_div_3_div_1_Template","ctx_r3","cols","ctx_r4","ctx_r5","invalid","ɵɵelement","i_r25","ctx_r7","ordinatesForm","valid","MatrixComponent_div_8_Template_form_ngSubmit_1_listener","_r27","ctx_r26","submitMatrixForm","MatrixComponent_div_8_div_3_Template","MatrixComponent_div_8_div_4_Template","MatrixComponent_div_8_button_5_Template","MatrixComponent_div_8_Template_form_ngSubmit_7_listener","ctx_r28","submitOrdinatesForm","MatrixComponent_div_8_div_8_Template","MatrixComponent_div_8_button_9_Template","ctx_r1","rows","dirty","ɵɵtextInterpolate3","i_r31","ɵɵpipeBind2","result_r30","ctx_r29","results","length","MatrixComponent_div_9_span_3_Template","ctx_r2","MatrixComponent","constructor","fb","fbuilder","formb","formbOrdinates","apiService","minSize","maxSize","okToCompleteOrdinatesForm","profileForm","group","row","array","ngOnInit","degreeForm","required","degreeValidator","i","j","controlName","addControl","pattern","expressionValidator","updateMatrixSize","Array","from","_","updateOrdinatesSize","onSubmit1","degreeControl","newDegree","value","markAllAsTouched","console","log","matrixData","disable","postMatrixData","subscribe","next","response","error","setErrors","ordinatesData","enable","postOrdinatesData","solution","safeEvaluate","expression","eval","control","result","isNaN","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","MatrixComponent_Template_form_ngSubmit_2_listener","MatrixComponent_div_5_Template","MatrixComponent_div_8_Template","MatrixComponent_div_9_Template"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl,  Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\n@Component({\r\n  selector: 'app-matrix',\r\n  templateUrl: './matrix.component.html',\r\n  styleUrls: ['./matrix.component.scss']\r\n})\r\n\r\nexport class MatrixComponent implements OnInit {\r\n \r\n  degreeForm!: FormGroup;\r\n  degree!:number; \r\n  minSize=2;\r\n  maxSize=7;\r\n  matrixForm!: FormGroup;\r\n  rows:number[] = [];\r\n  cols:number[] = [];\r\n  results:number[]  = []\r\n  okToCompleteOrdinatesForm:boolean = false;\r\n\r\n // ordinatesForm!: FormGroup;\r\n  \r\n  profileForm = this.formb.group({\r\n    degree: [''],\r\n  });\r\n\r\n//   matrixform: FormGroup = this.formb.group({\r\n//     row: this.formb.array([])\r\n// });\r\n\r\n ordinatesForm: FormGroup = this.formbOrdinates.group({\r\n  row: this.formbOrdinates.array([])\r\n })\r\n\r\n\r\n  constructor(private fb: FormBuilder, private fbuilder:FormBuilder,  private formb: FormBuilder, private formbOrdinates: FormBuilder,\r\n     private apiService: ApiService) {\r\n    \r\n  }\r\n\r\n   \r\n  ngOnInit(): void {\r\n    this.ordinatesForm.invalid;\r\n    this.degreeForm = this.fb.group({\r\n      degree: [this.degree, \r\n               Validators.required,\r\n               this.degreeValidator()]\r\n    });\r\n\r\n    this.profileForm = this.fb.group({\r\n      degree: ['']\r\n    });\r\n\r\n\r\n    this.matrixForm = this.formb.group({});\r\n    for (let i = 0; i < this.degree; i++) {\r\n      for (let j = 0; j < this.degree; j++) {\r\n          const controlName = `cell${i}_${j}`;\r\n          this.matrixForm.addControl(controlName, new FormControl('', [\r\n              Validators.required,\r\n              Validators.pattern(/^-?\\d+(\\.\\d+)?$/),// Only numeric values alowed \r\n              this.expressionValidator() \r\n          ]));\r\n      }\r\n  }\r\n\r\n    this.ordinatesForm = this.formb.group({});\r\n    for (let i = 0; i < this.degree; i++) {\r\n      {\r\n        this.ordinatesForm.addControl('ordin' + i , new FormControl(''));\r\n      }\r\n    }\r\n\r\n  }\r\n    \r\n  private updateMatrixSize(degree: number): void {\r\n    this.rows = Array.from({length: degree}, (_, i) => i);\r\n    this.cols = Array.from({length: degree}, (_, i) => i);\r\n  \r\n    // Reset and rebuild the matrix form based on new degree\r\n    this.matrixForm = this.formb.group({});\r\n    for (let i = 0; i < degree; i++) {\r\n      for (let j = 0; j < degree; j++) {\r\n        this.matrixForm.addControl(`cell${i}_${j}`, new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(/^-?\\d+(\\.\\d+)?$/),\r\n          this.expressionValidator()\r\n        ]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  private updateOrdinatesSize(degree: number): void {\r\n    // Reset and rebuild the ordinates form based on new degree\r\n    this.ordinatesForm = this.formb.group({});\r\n    for (let i = 0; i < degree; i++) {\r\n      this.ordinatesForm.addControl(`ordin${i}`, new FormControl('', Validators.required));\r\n    }\r\n  }\r\n\r\n    // onSubmit1(): void {\r\n    //   const formData = this.profileForm.value;\r\n    //   this.apiService.postDegreeData(formData).subscribe({\r\n    //     next:response => console.log('ResponseDegree:', response),\r\n    //     error: error => console.error('Error:', error)\r\n    //   });\r\n    // }\r\n\r\n    onSubmit1(): void {\r\n      // Extract the degree directly from the form control.\r\n      const degreeControl = this.profileForm.get('degree');\r\n      const newDegree = degreeControl ? +degreeControl.value! : 0;\r\n      if (newDegree >= this.minSize && newDegree <= this.maxSize)  {\r\n        this.degree = newDegree;\r\n        this.updateMatrixSize(newDegree);\r\n        this.updateOrdinatesSize(newDegree);\r\n      }\r\n    }\r\n\r\n    submitMatrixForm():void {\r\n      if (this.matrixForm.valid) {\r\n        // Proceed with submission\r\n      } else {\r\n        // Handle invalid form, e.g., by marking all fields as touched to show errors\r\n        this.matrixForm.markAllAsTouched();\r\n        console.log('Invalid matrix');\r\n      }\r\n      const matrixData = this.matrixForm.value;\r\n      console.log(this.matrixForm.value);\r\n      if (this.matrixForm.valid) {\r\n        this.matrixForm.disable();\r\n        this.okToCompleteOrdinatesForm = true;\r\n        // Process the valid form data\r\n        this.apiService.postMatrixData(matrixData).subscribe({\r\n          next: response => console.log('ResponseMatrix:', response),\r\n          error: error => {\r\n            console.log('error in submiting matrix -', error);\r\n            this.matrixForm.setErrors({ 'backend': error.error.error });\r\n          }\r\n        });\r\n      } \r\n      else {    \r\n         this.matrixForm.markAllAsTouched();\r\n         console.log('Invalid matrix');\r\n      }\r\n    }\r\n\r\n    submitOrdinatesForm():void {\r\n        const ordinatesData = this.ordinatesForm.value;\r\n        this.matrixForm.enable();\r\n        this.okToCompleteOrdinatesForm = false;\r\n        console.log(this.ordinatesForm.value);\r\n        this.apiService.postOrdinatesData(ordinatesData).subscribe({\r\n           next: response => { \r\n                               console.log('ResponseOrdinates:', response.solution);\r\n                               this.results = [...response.solution];\r\n                            },\r\n                           \r\n           error: error => console.error('Error:', error)\r\n        })\r\n    }\r\n    \r\n    safeEvaluate(expression: string): number | null {\r\n      try {\r\n        // Placeholder for safe evaluation logic\r\n        // e.g., using math.js: return math.evaluate(expression);\r\n        return eval(expression); // Note: Using eval() as a placeholder, not recommended for production\r\n      } catch {\r\n        return null; // Indicate failure to evaluate\r\n      }\r\n    }\r\n\r\n    expressionValidator(): ValidatorFn {\r\n      return (control: AbstractControl): ValidationErrors | null => {\r\n        const result = this.safeEvaluate(control.value); // Use the safe evaluation function\r\n        if (result === null || isNaN(result)) {\r\n          return { 'expressionInvalid': true };\r\n        }\r\n        return null; // If the expression is valid and evaluates to a number\r\n      };\r\n    }\r\n\r\n    degreeValidator(): ValidatorFn {\r\n      return (control: AbstractControl): ValidationErrors | null => {\r\n        const result = control.value;\r\n        if (result < this.minSize || result > this.maxSize ){\r\n          return {'expressionInvalid' : true}\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n\r\n    onFieldBlur(controlName: string): void {\r\n      const control = this.matrixForm.get(controlName);\r\n      if (control && !control.valid) {\r\n        \r\n        // The control is invalid after the user leaves the field\r\n        // Here, you can implement any logic you need to signal the error to the user\r\n        // For example, you could set a flag to show an error message next to the field\r\n      }\r\n    }\r\n         \r\n\r\n}\r\n\r\n","<div class=\"forms-container\">\r\n    <div class=\"form-profile\">\r\n        <form  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit1()\" class=\"profile\" novalidate >\r\n            <label name= \"degree\"></label>\r\n            <input type=\"number\" formControlName = \"degree\" name=\"degree\" class =\"form-control round\" placeholder=\"degree here\">\r\n            <div *ngIf=\"profileForm?.touched && profileForm?.errors?.['expressionInvalid']\"\r\n                  class=\"alert alert-danger\">\r\n                         degree must be an integer between 2 and 7\r\n            </div>\r\n            <button [disabled]=\"profileForm.invalid\" class=\"btn btn-secondary\">Enter</button>\r\n        </form>\r\n    </div>\r\n    <div *ngIf=\"profileForm.value && profileForm.dirty\" class=\"form-matrix\">\r\n        <form [formGroup]=\"matrixForm\" (ngSubmit)=\"submitMatrixForm()\">\r\n            <div class=\"formWithButton\">\r\n                <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row\">\r\n                    <div *ngFor=\"let col of cols; let j = index\" class=\"matrix-cell\">\r\n                        <div class=\"cell-container\">\r\n                            <input type=\"number\" \r\n                                  [formControlName]=\"'cell' + i + '_' + j\" \r\n                                  class=\"form-control\"\r\n                                  id=\"cell\"\r\n                                  (blur)=\"onFieldBlur('cell' + i + '_' + j)\"\r\n                                  required>\r\n                            <label for=\"cell\" class=\"badge bg-secondary bgcell\" > x{{j+1}}</label>\r\n                            <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\" class=\"error-message\">\r\n                                \r\n                                \r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.touched && matrixForm.get('cell' + i + '_' + j)?.errors?.['expressionInvalid']\"\r\n                                      class=\"alert alert-danger\">\r\n                                           Numbers only!\r\n                                </div>\r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['required']\">Cell is required.</div>\r\n                               <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\">Only numbers are allowed!</div>\r\n                            </div>\r\n                        <span *ngIf=\"j < degree-1 \" style=\"color:rgb(224, 149, 224);font-size:1.5em\">+</span>\r\n                        </div>\r\n                    </div><span style=\"color:rgb(224, 149, 224);font-size:1.5em\">=</span>\r\n                </div>\r\n                <div *ngIf=\"matrixForm.errors?.['backend']\" class=\"alert alert-dark error-message\" role=\"alert\" >\r\n                    {{ matrixForm.errors?.['backend'] }}\r\n                </div>\r\n            \r\n                <button *ngIf=\"matrixForm.dirty && matrixForm.valid\" [disabled]=\"matrixForm.invalid\" type=\"submit\" class=\"btn btn-primary buttonwidth buttonsMargin\">Submit</button>\r\n            </div>\r\n        </form>\r\n        <div class=\"formWithButton rowContentStart\">  <!--form-ordinates-->\r\n            <form [formGroup]=\"ordinatesForm\"  (ngSubmit) = \"submitOrdinatesForm()\">  <!--ordinates-row-->\r\n                <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row ordinatesButton\"> <!--form-control rounded ordinates-cell-->\r\n                        <input type =\"number\" class=\"form-control\" style=\"width:40%\"  [formControlName]=\"'ordin'+ i\" required/><!--rounded input-ordinate-->\r\n                </div>\r\n                <button *ngIf=\"ordinatesForm.dirty && ordinatesForm.valid && \r\n                               matrixForm.dirty && matrixForm.valid\" \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary buttonsMargin\" \r\n                        [disabled]=\"ordinatesForm.valid\"\r\n                >Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n<div *ngIf=\"ordinatesForm.dirty && ordinatesForm.valid && \r\n            matrixForm.dirty && matrixForm.valid\"   class=\"badge badge-light container\">\r\n    <div class=\"results\" name=\"response\">\r\n        The solution is: \r\n        <span *ngFor=\"let result of results; let i = index\">\r\n            <div class=\"solucionCell cellLeft\">\r\n                    x{{i}}={{result| number:'1.0-4'}}{{i < results.length - 1 ? '' : ''}}\r\n            </div>        \r\n        </span> \r\n    </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}