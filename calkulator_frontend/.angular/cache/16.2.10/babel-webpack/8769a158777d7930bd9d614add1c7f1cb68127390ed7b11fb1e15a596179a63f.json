{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_form_7_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 13);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MatrixComponent_form_7_div_2_div_1_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const j_r8 = restoredCtx.index;\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.removeElementFromArray(i_r5, j_r8));\n    });\n    i0.ɵɵtext(3, \"Remove Element\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const j_r8 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", j_r8);\n  }\n}\nfunction MatrixComponent_form_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, MatrixComponent_form_7_div_2_div_1_Template, 4, 1, \"div\", 12);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MatrixComponent_form_7_div_2_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r5 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.addElementToArray(i_r5));\n    });\n    i0.ɵɵtext(3, \"Add Element\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.getControls(\"arrayOfArrays\", i_r5));\n  }\n}\nfunction MatrixComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_form_7_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtemplate(2, MatrixComponent_form_7_div_2_Template, 4, 2, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MatrixComponent_form_7_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.addArray());\n    });\n    i0.ɵɵtext(4, \"Add Array\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 8);\n    i0.ɵɵtext(6, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.myForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.arrayOfArrays == null ? null : ctx_r0.arrayOfArrays.controls);\n  }\n}\nfunction MatrixComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"label\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r18 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"coefficient-\", i_r18, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Coefficient \", i_r18 + 1, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"coefficient-\", i_r18, \"\");\n  }\n}\nfunction MatrixComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"label\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r20 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"ordinate-\", i_r20, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Ordinate \", i_r20 + 1, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"ordinate-\", i_r20, \"\");\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, fbuilder, formb, apiService) {\n    this.fb = fb;\n    this.fbuilder = fbuilder;\n    this.formb = formb;\n    this.apiService = apiService;\n    this.degree = 0;\n    this.profileForm = this.formb.group({\n      degree: ['']\n    });\n    this.coefitients = [1, 2, 3, 1, 1, 1, 1, 1, 1, 1];\n    this.ordinates = [4, 5, 1, 1, 1, 1, 1, 1, 1, 1];\n    this.n = 0;\n  }\n  ngOnInit() {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n    //new form array of arrays\n    this.myForm = this.fbuilder.group({\n      arrayOfArrays: this.fb.array([])\n    });\n    this.addArray();\n  }\n  //begin of the methods array of arrays\n  get arrayOfArrays() {\n    return this.myForm.get('arrayOfArrays');\n  }\n  getControls(formArrayName, formGroupNameIndex) {\n    return this.myForm.get([formArrayName, formGroupNameIndex]).controls;\n  }\n  addArray() {\n    const array = this.fb.array([]);\n    this.arrayOfArrays.push(array);\n  }\n  addElementToArray(arrayIndex) {\n    const array = this.arrayOfArrays.at(arrayIndex);\n    array.push(this.fb.control(''));\n  }\n  removeElementFromArray(arrayIndex, elementIndex) {\n    const array = this.arrayOfArrays.at(arrayIndex);\n    array.removeAt(elementIndex);\n  }\n  onSubmit2() {\n    console.log(this.myForm.value);\n  }\n  //end of the methods array of arrays\n  get coefficientsControls() {\n    return this.matrixForm.get('coefficients').controls;\n  }\n  get ordinatesControls() {\n    return this.matrixForm.get('ordinates').controls;\n  }\n  get matrixControls() {\n    return this.matrixForm.get('matrix').controls;\n  }\n  onSubmitEquationsDegree() {\n    console.log('degreeform is now - ', this.degreeForm.controls['degree'].value, ' <-');\n  }\n  onSubmit1() {\n    const formData = this.profileForm.value;\n    this.apiService.postDegreeData(formData).subscribe({\n      next: response => console.log('Response:', response),\n      error: error => console.error('Error:', error)\n    });\n  }\n  initForm() {\n    for (let i = 0; i < this.degree; i++) {\n      this.matrixForm.get('coefficients').push(this.initCoefficientRow());\n      this.matrixForm.get('ordinates').push(this.fb.control(0));\n    }\n  }\n  initCoefficientRow() {\n    const row = this.fb.group({});\n    for (let i = 0; i < this.degree; i++) {\n      row.addControl(`coeff${i}`, this.fb.control(0));\n    }\n    return row;\n  }\n  onSubmit() {\n    const formData = this.matrixForm.value;\n    this.apiService.postMatrixData(formData).subscribe({\n      next: response => console.log('Response:', response),\n      error: error => console.error('Error:', error)\n    });\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 17,\n    vars: 5,\n    consts: [[\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"degree\"], [\"type\", \"number\", \"formControlName\", \"degree\", \"name\", \"degree\", \"placeholder\", \"degree here\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"coefficients\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"ordinates\"], [\"type\", \"submit\"], [\"formArrayName\", \"arrayOfArrays\"], [\"type\", \"button\", 3, \"click\"], [3, \"formGroupName\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"formControlName\"], [3, \"for\"], [\"type\", \"number\", \"formControlName\", \"i\", 3, \"id\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Hello, here is the matrix form:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit1();\n        });\n        i0.ɵɵelement(3, \"label\", 1)(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"button\");\n        i0.ɵɵtext(6, \"Submit degree\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, MatrixComponent_form_7_Template, 7, 2, \"form\", 3);\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"here is matrixForm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 5);\n        i0.ɵɵtemplate(12, MatrixComponent_div_12_Template, 4, 4, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵtemplate(14, MatrixComponent_div_14_Template, 4, 4, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 8);\n        i0.ɵɵtext(16, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.matrixForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.matrixControls);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.matrixControls);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","MatrixComponent_form_7_div_2_div_1_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r11","j_r8","index","i_r5","ɵɵnextContext","ctx_r9","ɵɵresetView","removeElementFromArray","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵtemplate","MatrixComponent_form_7_div_2_div_1_Template","MatrixComponent_form_7_div_2_Template_button_click_2_listener","_r13","ctx_r12","addElementToArray","ctx_r3","getControls","MatrixComponent_form_7_Template_form_ngSubmit_0_listener","_r15","ctx_r14","onSubmit","MatrixComponent_form_7_div_2_Template","MatrixComponent_form_7_Template_button_click_3_listener","ctx_r16","addArray","ctx_r0","myForm","arrayOfArrays","controls","i_r18","ɵɵpropertyInterpolate1","ɵɵtextInterpolate1","i_r20","MatrixComponent","constructor","fb","fbuilder","formb","apiService","degree","profileForm","group","coefitients","ordinates","n","ngOnInit","degreeForm","required","array","get","formArrayName","formGroupNameIndex","push","arrayIndex","at","control","elementIndex","removeAt","onSubmit2","console","log","value","coefficientsControls","matrixForm","ordinatesControls","matrixControls","onSubmitEquationsDegree","onSubmit1","formData","postDegreeData","subscribe","next","response","error","initForm","i","initCoefficientRow","row","addControl","postMatrixData","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","MatrixComponent_Template_form_ngSubmit_2_listener","MatrixComponent_form_7_Template","MatrixComponent_Template_form_ngSubmit_10_listener","MatrixComponent_div_12_Template","MatrixComponent_div_14_Template"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray,  FormControl,  Validators } from '@angular/forms';\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-matrix',\n  templateUrl: './matrix.component.html',\n  styleUrls: ['./matrix.component.scss']\n})\n\nexport class MatrixComponent implements OnInit {\n  matrixForm!: FormGroup;\n  degreeForm!: FormGroup;\n  degree:number=0; \n\n  myForm!: FormGroup;\n\n  profileForm = this.formb.group({\n    degree: [''],\n    \n  });\n\n  \n\n\n   \n  coefitients=[1,2,3,1,1,1,1,1,1,1]\n  ordinates=  [4,5,1,1,1,1,1,1,1,1]\n  \n\n\n  constructor(private fb: FormBuilder, private fbuilder:FormBuilder,  private formb: FormBuilder, private apiService: ApiService) {\n    \n  }\n\n  n:number = 0  \n  ngOnInit(): void {\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required]\n    });\n\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n    //new form array of arrays\n    this.myForm = this.fbuilder.group({\n      arrayOfArrays: this.fb.array([])\n    });\n    this.addArray();\n  }\n  \n  //begin of the methods array of arrays\n  get arrayOfArrays(): FormArray {\n    return this.myForm.get('arrayOfArrays') as FormArray;\n  }\n\n\n \n  getControls(formArrayName: string, formGroupNameIndex: number): FormControl[] {\n    return (this.myForm.get([formArrayName, formGroupNameIndex]) as FormArray).controls as FormControl[];\n  }\n\n  addArray(): void {\n    const array = this.fb.array([]);\n    this.arrayOfArrays.push(array);\n  }\n\n  addElementToArray(arrayIndex: number): void {\n    const array = this.arrayOfArrays.at(arrayIndex) as FormArray;\n    array.push(this.fb.control(''));\n  }\n\n  removeElementFromArray(arrayIndex: number, elementIndex: number): void {\n    const array = this.arrayOfArrays.at(arrayIndex) as FormArray;\n    array.removeAt(elementIndex);\n    }\n    \n  onSubmit2(): void {\n    console.log(this.myForm.value);\n    }\n  //end of the methods array of arrays\n\n  get coefficientsControls() {\n    return (this.matrixForm.get('coefficients') as FormArray).controls as FormGroup[];\n  }\n\n  get ordinatesControls() {\n    return (this.matrixForm.get('ordinates') as FormArray).controls;\n  }\n\n  \n  \n\n  get matrixControls() {\n    return (this.matrixForm.get('matrix') as FormArray).controls;\n}\n\n  onSubmitEquationsDegree() {\n    console.log('degreeform is now - ', this.degreeForm.controls['degree'].value, ' <-')\n  }\n\n    onSubmit1(): void {\n      const formData = this.profileForm.value;\n      this.apiService.postDegreeData(formData).subscribe({\n        next:response => console.log('Response:', response),\n        error: error => console.error('Error:', error)\n      });\n    }\n\n    \n  initForm() {\n    for (let i = 0; i < this.degree; i++) {\n      (this.matrixForm.get('coefficients') as FormArray).push(this.initCoefficientRow());\n      (this.matrixForm.get('ordinates') as FormArray).push(this.fb.control(0));\n    }\n  }\n\n    initCoefficientRow(): FormGroup {\n      const row = this.fb.group({});\n      for (let i = 0; i < this.degree; i++) {\n        row.addControl(`coeff${i}`, this.fb.control(0));\n      }\n      return row;\n    }\n  \n    onSubmit(): void {\n      const formData = this.matrixForm.value;\n      this.apiService.postMatrixData(formData).subscribe({\n        next: response => console.log('Response:', response),\n        error : error => console.error('Error:', error)\n      });\n    }\n\n  }\n\n  ","<p>Hello, here is the matrix form:</p>\n<form  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit1()\" novalidate>\n    <label name= \"degree\"></label>\n    <input type=\"number\" formControlName = \"degree\" name=\"degree\" placeholder=\"degree here\">\n    <button>Submit degree</button>\n</form>\n\n<form *ngIf=\"myForm\" [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n    <div formArrayName=\"arrayOfArrays\">\n      <div *ngFor=\"let arrayCtrl of arrayOfArrays?.controls; let i = index\" [formGroupName]=\"i\">\n        <div *ngFor=\"let ctrl of getControls('arrayOfArrays', i); let j = index\">\n          <input type=\"text\" [formControlName]=\"j\">\n          <button type=\"button\" (click)=\"removeElementFromArray(i, j)\">Remove Element</button>\n        </div>\n        <button type=\"button\" (click)=\"addElementToArray(i)\">Add Element</button>\n      </div>\n    </div>\n    <button type=\"button\" (click)=\"addArray()\">Add Array</button>\n    <button type=\"submit\">Submit</button>\n  </form>\n  \n  \n\n <!-- <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <input type=\"number\" formControlName = \"degree\" placeholder=\"degree here\">\n    <button type=\"submit\">Submit degree two</button>\n</form> -->\n\n<!-- <form  [formGroup] = \"degreeForm\" (ngSubmit)=\"onSubmitEquationsDegree()\">\n    <label name= \"degree\"></label>\n    <input type=\"number\" [formControlName] = \"degree\" name=\"degree\" placeholder=\"number of equations\">\n    <button type=\"submit\" >Accept</button>\n</form> -->\n\n<!-- <div formArrayName=\"matrix\">\n    <div *ngFor=\"let row of matrixControls; let i = index\" [formGroupName]=\"i\">\n       \n    </div>\n</div>  -->\n\n<p>here is matrixForm</p>\n<form [formGroup]=\"matrixForm\" (ngSubmit)=\"onSubmit()\">\n    <div formArrayName=\"coefficients\">\n      <div *ngFor=\"let coefficient of matrixControls; let i=index\" [formGroupName]=\"i\">\n        <label for=\"coefficient-{{i}}\">Coefficient {{i + 1}}:</label>\n        <input type=\"number\" id=\"coefficient-{{i}}\" formControlName=\"i\">\n      </div>\n    </div>\n  \n    <div formArrayName=\"ordinates\">\n      <div *ngFor=\"let ordinate of matrixControls; let i=index\" [formGroupName]=\"i\">\n        <label for=\"ordinate-{{i}}\">Ordinate {{i + 1}}:</label>\n        <input type=\"number\" id=\"ordinate-{{i}}\" formControlName=\"i\">\n      </div>\n    </div>\n  \n    <button type=\"submit\">Submit</button>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}