{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction MatrixComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" degree must be an integer between 2 and 7 \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"top\": a0,\n    \"left\": a1\n  };\n};\nfunction MatrixComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.previewPositionY + \"px\", ctx_r1.previewPositionX + \"px\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.previewValue);\n  }\n}\nfunction MatrixComponent_div_9_div_2_div_1_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Numbers only! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_9_div_2_div_1_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Cell is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_9_div_2_div_1_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only numbers are allowed!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatrixComponent_div_9_div_2_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, MatrixComponent_div_9_div_2_div_1_div_6_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, MatrixComponent_div_9_div_2_div_1_div_6_div_2_Template, 2, 0, \"div\", 29);\n    i0.ɵɵtemplate(3, MatrixComponent_div_9_div_2_div_1_div_6_div_3_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r13 = i0.ɵɵnextContext().index;\n    const i_r10 = i0.ɵɵnextContext().index;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r14.matrixForm.get(\"cell\" + i_r10 + \"_\" + j_r13)) == null ? null : tmp_0_0.touched) && ((tmp_0_0 = ctx_r14.matrixForm.get(\"cell\" + i_r10 + \"_\" + j_r13)) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"expressionInvalid\"]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r14.matrixForm.get(\"cell\" + i_r10 + \"_\" + j_r13)) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r14.matrixForm.get(\"cell\" + i_r10 + \"_\" + j_r13)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n  }\n}\nfunction MatrixComponent_div_9_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24)(2, \"input\", 25);\n    i0.ɵɵlistener(\"blur\", function MatrixComponent_div_9_div_2_div_1_Template_input_blur_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const j_r13 = restoredCtx.index;\n      const i_r10 = i0.ɵɵnextContext().index;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onFieldBlur(\"cell\" + i_r10 + \"_\" + j_r13));\n    })(\"focus\", function MatrixComponent_div_9_div_2_div_1_Template_input_focus_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const j_r13 = restoredCtx.index;\n      const i_r10 = i0.ɵɵnextContext().index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      let tmp_b_0;\n      return i0.ɵɵresetView(ctx_r23.showCellPreview($event, \"cell\" + i_r10 + \"_\" + j_r13, (tmp_b_0 = ctx_r23.matrixForm.get(\"cell\" + i_r10 + \"_\" + j_r13)) == null ? null : tmp_b_0.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\")(4, \"label\", 26);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, MatrixComponent_div_9_div_2_div_1_div_6_Template, 4, 3, \"div\", 27);\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8, \"+\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const j_r13 = ctx.index;\n    const i_r10 = i0.ɵɵnextContext().index;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"cell\" + i_r10 + \"_\" + j_r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" x\", j_r13 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r11.matrixForm.get(\"cell\" + i_r10 + \"_\" + j_r13)) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(j_r13 < ctx_r11.cols.length - 1 ? \"plusSign\" : \"plusSign hiddenPlus\");\n  }\n}\nfunction MatrixComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, MatrixComponent_div_9_div_2_div_1_Template, 9, 5, \"div\", 21);\n    i0.ɵɵelementStart(2, \"span\", 22);\n    i0.ɵɵtext(3, \"=\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.cols);\n  }\n}\nfunction MatrixComponent_div_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.matrixForm.errors == null ? null : ctx_r5.matrixForm.errors[\"backend\"], \" \");\n  }\n}\nfunction MatrixComponent_div_9_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵtext(1, \"Submit matrix\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r6.matrixForm.invalid && (!ctx_r6.okToCompleteMatrixForm || !(ctx_r6.matrixForm.errors == null ? null : ctx_r6.matrixForm.errors[\"singularMatrix\"])));\n  }\n}\nfunction MatrixComponent_div_9_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 23)(2, \"div\", 24)(3, \"div\", 32)(4, \"input\", 33);\n    i0.ɵɵlistener(\"focus\", function MatrixComponent_div_9_div_6_Template_input_focus_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const i_r27 = restoredCtx.index;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      let tmp_b_0;\n      return i0.ɵɵresetView(ctx_r28.showCellPreview($event, \"ordin\" + i_r27, (tmp_b_0 = ctx_r28.ordinatesForm.get(\"ordin\" + i_r27)) == null ? null : tmp_b_0.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵelement(6, \"label\", 34);\n    i0.ɵɵtext(7, \"x\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const i_r27 = ctx.index;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"ordin\" + i_r27);\n  }\n}\nfunction MatrixComponent_div_9_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r8.ordinatesForm.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.matrixForm.errors ? \"Change matrix\" : \"See result\", \" \");\n  }\n}\nfunction MatrixComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"form\", 14);\n    i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_div_9_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.submitMatrixForm());\n    });\n    i0.ɵɵtemplate(2, MatrixComponent_div_9_div_2_Template, 4, 1, \"div\", 15);\n    i0.ɵɵtemplate(3, MatrixComponent_div_9_div_3_Template, 2, 1, \"div\", 16);\n    i0.ɵɵtemplate(4, MatrixComponent_div_9_button_4_Template, 2, 1, \"button\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 18);\n    i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_div_9_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.submitOrdinatesForm());\n    });\n    i0.ɵɵtemplate(6, MatrixComponent_div_9_div_6_Template, 8, 1, \"div\", 15);\n    i0.ɵɵtemplate(7, MatrixComponent_div_9_button_7_Template, 2, 2, \"button\", 19);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.matrixForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.matrixForm.errors == null ? null : ctx_r2.matrixForm.errors[\"backend\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.matrixForm.dirty && ctx_r2.matrixForm.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.ordinatesForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.ordinatesForm.dirty && ctx_r2.ordinatesForm.valid && !ctx_r2.okToCompleteMatrixForm && !(ctx_r2.matrixForm.errors == null ? null : ctx_r2.matrixForm.errors[\"singularMatrix\"]));\n  }\n}\nfunction MatrixComponent_div_10_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r34 = ctx.$implicit;\n    const i_r35 = ctx.index;\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" x\", i_r35 + 1, \"=\", i0.ɵɵpipeBind2(3, 3, result_r34, \"1.0-4\"), \"\", i_r35 < ctx_r33.results.length - 1 ? \"\" : \"\", \" \");\n  }\n}\nfunction MatrixComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37);\n    i0.ɵɵtext(2, \" The solution is: \");\n    i0.ɵɵtemplate(3, MatrixComponent_div_10_span_3_Template, 4, 6, \"span\", 38);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\nexport class MatrixComponent {\n  constructor(fb, fbuilder, formb, formbOrdinates, apiService) {\n    this.fb = fb;\n    this.fbuilder = fbuilder;\n    this.formb = formb;\n    this.formbOrdinates = formbOrdinates;\n    this.apiService = apiService;\n    this.minSize = 2;\n    this.maxSize = 7;\n    this.rows = [];\n    this.cols = [];\n    this.results = [];\n    this.okToCompleteOrdinatesForm = false;\n    this.okToCompleteMatrixForm = true;\n    this.matrixSingular = false;\n    this.showPreview = false; // Controls visibility of the preview window\n    this.previewValue = ''; // The value displayed in the preview\n    this.previewPositionX = 0; // X-coordinate for positioning\n    this.previewPositionY = 0; // Y-coordinate for positioning\n    // ordinatesForm!: FormGroup;\n    this.profileForm = this.formb.group({\n      degree: ['']\n    });\n    //   matrixform: FormGroup = this.formb.group({\n    //     row: this.formb.array([])\n    // });\n    this.ordinatesForm = this.formbOrdinates.group({\n      row: this.formbOrdinates.array([])\n    });\n  }\n  ngOnInit() {\n    this.ordinatesForm.invalid;\n    this.degreeForm = this.fb.group({\n      degree: [this.degree, Validators.required, this.degreeValidator()]\n    });\n    this.profileForm = this.fb.group({\n      degree: ['']\n    });\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < this.degree; i++) {\n      for (let j = 0; j < this.degree; j++) {\n        const controlName = `cell${i}_${j}`;\n        this.matrixForm.addControl(controlName, new FormControl('', [Validators.required, Validators.pattern(/^-?\\d+(\\.\\d+)?$/), this.expressionValidator()]));\n      }\n    }\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < this.degree; i++) {\n      {\n        this.ordinatesForm.addControl('ordin' + i, new FormControl(''));\n      }\n    }\n    this.matrixForm.valueChanges.subscribe(() => {\n      //if(this.okToCompleteMatrixForm && !this.okToCompleteOrdinatesForm)\n      this.okToCompleteOrdinatesForm = false;\n    });\n  }\n  updateMatrixSize(degree) {\n    this.rows = Array.from({\n      length: degree\n    }, (_, i) => i);\n    this.cols = Array.from({\n      length: degree\n    }, (_, i) => i);\n    // Reset and rebuild the matrix form based on new degree\n    this.matrixForm = this.formb.group({});\n    for (let i = 0; i < degree; i++) {\n      for (let j = 0; j < degree; j++) {\n        this.matrixForm.addControl(`cell${i}_${j}`, new FormControl('', [Validators.required, Validators.pattern(/^-?\\d+(\\.\\d+)?$/), this.expressionValidator()]));\n      }\n    }\n  }\n  updateOrdinatesSize(degree) {\n    // Reset and rebuild the ordinates form based on new degree\n    this.ordinatesForm = this.formb.group({});\n    for (let i = 0; i < degree; i++) {\n      this.ordinatesForm.addControl(`ordin${i}`, new FormControl('', Validators.required));\n    }\n  }\n  // onSubmit1(): void {\n  //   const formData = this.profileForm.value;\n  //   this.apiService.postDegreeData(formData).subscribe({\n  //     next:response => console.log('ResponseDegree:', response),\n  //     error: error => console.error('Error:', error)\n  //   });\n  // }\n  onSubmit1() {\n    const degreeControl = this.profileForm.get('degree');\n    if (degreeControl) {\n      const value = degreeControl.value ?? '';\n      const newDegree = parseInt(value, 10); // ✅ Convert to integer\n      if (!isNaN(newDegree) && newDegree >= this.minSize && newDegree <= this.maxSize) {\n        this.degree = newDegree;\n        this.updateMatrixSize(newDegree);\n        this.updateOrdinatesSize(newDegree);\n      } else {\n        console.error(\"Invalid degree value:\", degreeControl.value);\n      }\n    }\n    // Extract the degree directly from the form control.\n    // const degreeControl = this.profileForm.get('degree');\n    // const newDegree = degreeControl ? +degreeControl.value! : 0;\n    // if (newDegree >= this.minSize && newDegree <= this.maxSize)  {\n    //   this.degree = newDegree;\n    //   this.updateMatrixSize(newDegree);\n    //   this.updateOrdinatesSize(newDegree);\n    // }\n  }\n\n  submitMatrixForm() {\n    if (this.matrixForm.valid) {\n      // Proceed with submission\n      this.matrixSingular = false;\n    } else {\n      // Handle invalid form, e.g., by marking all fields as touched to show errors\n      this.matrixForm.markAllAsTouched();\n      console.log('Invalid matrix');\n    }\n    const matrixData = this.matrixForm.value;\n    // Convert all matrix values to numbers\n    Object.keys(matrixData).forEach(key => {\n      matrixData[key] = matrixData[key] !== '' ? parseFloat(matrixData[key]) : null;\n    });\n    console.log('Processed matrix data:', matrixData);\n    console.log(this.matrixForm.value);\n    if (this.matrixForm.valid) {\n      this.matrixForm.disable();\n      this.okToCompleteOrdinatesForm = true;\n      this.okToCompleteMatrixForm = false;\n      // Process the valid form data\n      this.apiService.postMatrixData(matrixData).subscribe({\n        next: response => console.log('ResponseMatrix:', response),\n        error: error => {\n          console.log('error in submiting matrix -', error);\n          if (error.error && error.error.error === 'Matrix is singular, cannot proceed') {\n            // If the error is specifically because the matrix is singular\n            this.matrixForm.setErrors({\n              'singularMatrix': 'Matrix is singular, cannot proceed'\n            });\n            this.matrixSingular = true;\n            //this.okToCompleteOrdinatesForm = false;\n          }\n\n          this.matrixForm.setErrors({\n            'backend': error.error.error\n          });\n        }\n      });\n    } else {\n      this.matrixForm.markAllAsTouched();\n      console.log('Invalid matrix');\n    }\n  }\n  submitOrdinatesForm() {\n    const ordinatesData = this.ordinatesForm.value;\n    // Convert all ordinates to numbers\n    Object.keys(ordinatesData).forEach(key => {\n      ordinatesData[key] = ordinatesData[key] !== '' ? parseFloat(ordinatesData[key]) : null;\n    });\n    console.log('Processed ordinates data:', ordinatesData);\n    if (this.ordinatesForm.valid && this.okToCompleteOrdinatesForm) {\n      this.matrixForm.enable();\n      this.okToCompleteOrdinatesForm = false;\n      this.okToCompleteMatrixForm = true;\n    }\n    console.log('ordinates in submitOrdinatesForm = ', this.ordinatesForm.value);\n    console.log('matrix in submitOrdinatesForm = ', this.matrixForm.value);\n    if (this.matrixForm.errors?.['singularMatrix']) this.okToCompleteMatrixForm = true;\n    this.apiService.postOrdinatesData(ordinatesData).subscribe({\n      next: response => {\n        console.log('ResponseOrdinates:', response.solution);\n        this.results = [...response.solution];\n      },\n      error: error => console.error('Error:', error)\n    });\n  }\n  safeEvaluate(expression) {\n    try {\n      // Placeholder for safe evaluation logic\n      // e.g., using math.js: return math.evaluate(expression);\n      return eval(expression); // Note: Using eval() as a placeholder, not recommended for production\n    } catch {\n      return null; // Indicate failure to evaluate\n    }\n  }\n\n  expressionValidator() {\n    return control => {\n      const result = this.safeEvaluate(control.value); // Use the safe evaluation function\n      if (result === null || isNaN(result)) {\n        return {\n          'expressionInvalid': true\n        };\n      }\n      return null; // If the expression is valid and evaluates to a number\n    };\n  }\n\n  degreeValidator() {\n    return control => {\n      const result = control.value;\n      if (result < this.minSize || result > this.maxSize) {\n        return {\n          'expressionInvalid': true\n        };\n      }\n      return null;\n    };\n  }\n  onFieldBlur(controlName) {\n    const control = this.matrixForm.get(controlName);\n    if (control && !control.valid) {\n      // The control is invalid after the user leaves the field\n      // Here, you can implement any logic you need to signal the error to the user\n      // For example, you could set a flag to show an error message next to the field\n    }\n  }\n  showCellPreview(event, fieldName, value) {\n    this.showPreview = true;\n    this.previewValue = value || ''; // Display value (empty if none)\n    // Get the target input field's position\n    const target = event.target;\n    const rect = target.getBoundingClientRect();\n    // Position the preview above the input field\n    this.previewPositionX = rect.left + window.scrollX - 10;\n    this.previewPositionY = rect.top + window.scrollY - 60;\n    // Clear any existing timeout to prevent premature hiding\n    clearTimeout(this.previewTimeout);\n    // Hide ONLY the preview window after 3 seconds (inputs stay visible)\n    this.previewTimeout = setTimeout(() => {\n      this.hidePreviewOnly();\n    }, 3000);\n  }\n  // Hide the floating preview window (but NOT the input fields)\n  hidePreviewOnly() {\n    this.showPreview = false;\n  }\n  static #_ = this.ɵfac = function MatrixComponent_Factory(t) {\n    return new (t || MatrixComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatrixComponent,\n    selectors: [[\"app-matrix\"]],\n    decls: 11,\n    vars: 6,\n    consts: [[1, \"forms-container\"], [1, \"form-profile\"], [\"novalidate\", \"\", 1, \"profile\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"degree\"], [\"type\", \"tel\", \"formControlName\", \"degree\", \"name\", \"degree\", \"placeholder\", \"degree\", 1, \"form-control\", \"round\", 3, \"focus\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"btn\", \"btn-secondary\", \"button_profile\", 3, \"disabled\"], [\"class\", \"floating-preview\", 3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"form-matrix matrix-direction\", 4, \"ngIf\"], [\"class\", \"badge text-left container\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"floating-preview\", 3, \"ngStyle\"], [1, \"preview-text\"], [1, \"form-matrix\", \"matrix-direction\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"matrix-row\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-dark error-message\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary buttonwidth buttonsMargin\", 3, \"disabled\", 4, \"ngIf\"], [1, \"form-matrix\", \"ordinates-direction\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", \"class\", \"btn btn-primary blink_me\", 3, \"disabled\", 4, \"ngIf\"], [1, \"matrix-row\"], [\"class\", \"matrix-cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"equalSign\"], [1, \"matrix-cell\"], [1, \"cell-container\"], [\"type\", \"tel\", \"id\", \"cell\", \"required\", \"\", 1, \"cell-input\", 3, \"formControlName\", \"blur\", \"focus\"], [\"for\", \"cell\", 1, \"badge\", \"bg-secondary\", \"bgcell\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-dark\", \"error-message\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"buttonwidth\", \"buttonsMargin\", 3, \"disabled\"], [1, \"cell-input\"], [\"type\", \"tel\", \"required\", \"\", 1, \"input-ordinate\", 3, \"formControlName\", \"focus\"], [1, \"badge\", \"bg-secondary\", \"bgcell\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"blink_me\", 3, \"disabled\"], [1, \"badge\", \"text-left\", \"container\"], [\"name\", \"response\", 1, \"solution_elements\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function MatrixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function MatrixComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit1();\n        });\n        i0.ɵɵelement(3, \"label\", 3);\n        i0.ɵɵelementStart(4, \"input\", 4);\n        i0.ɵɵlistener(\"focus\", function MatrixComponent_Template_input_focus_4_listener($event) {\n          let tmp_b_0;\n          return ctx.showCellPreview($event, \"degree\", (tmp_b_0 = ctx.profileForm.get(\"degree\")) == null ? null : tmp_b_0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, MatrixComponent_div_5_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵtext(7, \"Enter\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(8, MatrixComponent_div_8_Template, 3, 5, \"div\", 7);\n        i0.ɵɵtemplate(9, MatrixComponent_div_9_Template, 8, 7, \"div\", 8);\n        i0.ɵɵtemplate(10, MatrixComponent_div_10_Template, 4, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.profileForm == null ? null : ctx.profileForm.touched) && (ctx.profileForm == null ? null : ctx.profileForm.errors == null ? null : ctx.profileForm.errors[\"expressionInvalid\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.profileForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPreview);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.profileForm.value && ctx.profileForm.dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.ordinatesForm.dirty && ctx.ordinatesForm.valid && ctx.matrixForm.dirty && ctx.matrixForm.valid && !ctx.matrixSingular && ctx.okToCompleteMatrixForm);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.DecimalPipe],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background-color: rgb(151, 182, 207);\\n}\\n\\n*[_ngcontent-%COMP%] {\\n  border-radius: 5px;\\n}\\n\\ninput[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  background-color: rgb(125, 138, 167);\\n  font-size: 1rem;\\n  padding: 0.5em;\\n  border: 1px solid #ccc;\\n}\\n\\n@media (min-width: 768px) {\\n  .forms-container[_ngcontent-%COMP%] {\\n    flex-direction: row; \\n\\n    flex-wrap: wrap; \\n\\n  }\\n  .form-matrix[_ngcontent-%COMP%], .form-ordinates[_ngcontent-%COMP%] {\\n    \\n\\n    width: 80%;\\n  }\\n}\\n@media screen and (min-width: 1200px) {\\n  .form-matrix[_ngcontent-%COMP%], .form-ordinates[_ngcontent-%COMP%] {\\n    flex-basis: auto; \\n\\n  }\\n}\\n.button_profile[_ngcontent-%COMP%] {\\n  margin-top: 15%;\\n}\\n\\n.cell-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  width: auto;\\n}\\n\\n.ordinatesButton[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.formWithButton[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\n.bgcell[_ngcontent-%COMP%] {\\n  width: auto;\\n  height: auto;\\n  padding: 0;\\n  font-size: 2em;\\n}\\n\\n.matrix-cell[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.forms-container[_ngcontent-%COMP%] {\\n  font-size: 1em;\\n  width: auto;\\n  margin: 1%;\\n}\\n\\n.profile[_ngcontent-%COMP%] {\\n  max-width: 14%;\\n  margin-bottom: 2%;\\n  margin-top: 3%;\\n  margin-left: 1%;\\n}\\n\\n.form-profile[_ngcontent-%COMP%] {\\n  width: 30%;\\n}\\n\\n.form-matrix[_ngcontent-%COMP%] {\\n  width: auto;\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.matrix-direction[_ngcontent-%COMP%] {\\n  flex-direction: row;\\n}\\n\\n.ordinates-direction[_ngcontent-%COMP%] {\\n  flex-direction: column;\\n}\\n\\n.form-ordinates[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.matrix-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n}\\n\\n.cell-input[_ngcontent-%COMP%] {\\n  font-size: 1em;\\n}\\n\\n.ordinates-row[_ngcontent-%COMP%] {\\n  font-size: 1em;\\n}\\n\\n.ordinates-cell[_ngcontent-%COMP%] {\\n  background-color: rgba(19, 102, 128, 0.89);\\n}\\n\\n.buttonwidth[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: rgb(155, 8, 8);\\n  background-color: chocolate;\\n}\\n\\n.error-placeholder[_ngcontent-%COMP%] {\\n  height: 20px;\\n  visibility: hidden;\\n}\\n\\n.results[_ngcontent-%COMP%] {\\n  color: rgb(226, 210, 190);\\n  background-color: rgb(155, 8, 8);\\n  text-align: left;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: left;\\n  width: 80%;\\n  margin-top: 1%;\\n  margin-left: 0;\\n  font-size: 4vw;\\n  max-width: auto;\\n  background-color: rgb(155, 8, 8);\\n  color: rgb(175, 132, 75);\\n  display: flex;\\n}\\n\\n.buttonsMargin[_ngcontent-%COMP%] {\\n  margin-top: 1%;\\n}\\n\\n.plusSign[_ngcontent-%COMP%] {\\n  color: rgb(224, 149, 224);\\n  font-size: 1.5em;\\n  display: flex;\\n}\\n\\n.equalSign[_ngcontent-%COMP%] {\\n  color: rgb(224, 149, 224);\\n  font-size: 1.5em;\\n}\\n\\n.hiddenPlus[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 8vw;\\n}\\n\\n.forms-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column; \\n\\n  font-size: 1em;\\n  width: auto;\\n  margin: 1%;\\n}\\n\\n\\n\\n@media (min-width: 1200px) {\\n  .forms-container[_ngcontent-%COMP%] {\\n    flex-direction: column; \\n\\n    flex-wrap: wrap; \\n\\n  }\\n  .form-matrix[_ngcontent-%COMP%], .form-ordinates[_ngcontent-%COMP%] {\\n    flex-basis: auto; \\n\\n    \\n\\n  }\\n}\\n.blink_me[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_blinker 1s linear infinite;\\n  margin-top: 5%;\\n}\\n\\n@keyframes _ngcontent-%COMP%_blinker {\\n  50% {\\n    opacity: 0;\\n  }\\n}\\n.solution_elements[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n}\\n\\n\\n\\n.floating-preview[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background-color: rgba(255, 255, 0, 0.9);\\n  color: #000;\\n  padding: 10px 20px;\\n  border-radius: 10px;\\n  font-size: 1.5em;\\n  font-weight: bold;\\n  text-align: center;\\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\\n  transition: opacity 0.3s ease-in-out;\\n  opacity: 1;\\n  z-index: 1000;\\n  max-width: 200px;\\n}\\n\\n\\n\\n.floating-preview.hidden[_ngcontent-%COMP%] {\\n  opacity: 0;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .floating-preview[_ngcontent-%COMP%] {\\n    font-size: 1.2em;\\n    padding: 8px 15px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction2","_c0","ctx_r1","previewPositionY","previewPositionX","ɵɵadvance","ɵɵtextInterpolate","previewValue","ɵɵtemplate","MatrixComponent_div_9_div_2_div_1_div_6_div_1_Template","MatrixComponent_div_9_div_2_div_1_div_6_div_2_Template","MatrixComponent_div_9_div_2_div_1_div_6_div_3_Template","tmp_0_0","ctx_r14","matrixForm","get","i_r10","j_r13","touched","errors","tmp_1_0","tmp_2_0","ɵɵlistener","MatrixComponent_div_9_div_2_div_1_Template_input_blur_2_listener","restoredCtx","ɵɵrestoreView","_r22","index","ɵɵnextContext","ctx_r20","ɵɵresetView","onFieldBlur","MatrixComponent_div_9_div_2_div_1_Template_input_focus_2_listener","$event","ctx_r23","tmp_b_0","showCellPreview","value","MatrixComponent_div_9_div_2_div_1_div_6_Template","ɵɵtextInterpolate1","ctx_r11","ɵɵclassMap","cols","length","MatrixComponent_div_9_div_2_div_1_Template","ctx_r4","ctx_r5","ctx_r6","invalid","okToCompleteMatrixForm","MatrixComponent_div_9_div_6_Template_input_focus_4_listener","_r29","i_r27","ctx_r28","ordinatesForm","ɵɵelement","ctx_r8","valid","MatrixComponent_div_9_Template_form_ngSubmit_1_listener","_r31","ctx_r30","submitMatrixForm","MatrixComponent_div_9_div_2_Template","MatrixComponent_div_9_div_3_Template","MatrixComponent_div_9_button_4_Template","MatrixComponent_div_9_Template_form_ngSubmit_5_listener","ctx_r32","submitOrdinatesForm","MatrixComponent_div_9_div_6_Template","MatrixComponent_div_9_button_7_Template","ctx_r2","rows","dirty","ɵɵtextInterpolate3","i_r35","ɵɵpipeBind2","result_r34","ctx_r33","results","MatrixComponent_div_10_span_3_Template","ctx_r3","MatrixComponent","constructor","fb","fbuilder","formb","formbOrdinates","apiService","minSize","maxSize","okToCompleteOrdinatesForm","matrixSingular","showPreview","profileForm","group","degree","row","array","ngOnInit","degreeForm","required","degreeValidator","i","j","controlName","addControl","pattern","expressionValidator","valueChanges","subscribe","updateMatrixSize","Array","from","_","updateOrdinatesSize","onSubmit1","degreeControl","newDegree","parseInt","isNaN","console","error","markAllAsTouched","log","matrixData","Object","keys","forEach","key","parseFloat","disable","postMatrixData","next","response","setErrors","ordinatesData","enable","postOrdinatesData","solution","safeEvaluate","expression","eval","control","result","event","fieldName","target","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","clearTimeout","previewTimeout","setTimeout","hidePreviewOnly","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","MatrixComponent_Template","rf","ctx","MatrixComponent_Template_form_ngSubmit_2_listener","MatrixComponent_Template_input_focus_4_listener","MatrixComponent_div_5_Template","MatrixComponent_div_8_Template","MatrixComponent_div_9_Template","MatrixComponent_div_10_Template"],"sources":["C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.ts","C:\\Users\\matem\\Documents\\Applications\\Python\\equation_solver\\calkulator_frontend\\src\\app\\matrix\\matrix.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, FormArray,  FormControl, AbstractControl,  Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\n@Component({\r\n  selector: 'app-matrix',\r\n  templateUrl: './matrix.component.html',\r\n  styleUrls: ['./matrix.component.scss']\r\n})\r\n\r\nexport class MatrixComponent implements OnInit {\r\n \r\n  degreeForm!: FormGroup;\r\n  degree!:number; \r\n  minSize=2;\r\n  maxSize=7;\r\n  matrixForm!: FormGroup;\r\n  rows:number[] = [];\r\n  cols:number[] = [];\r\n  results:number[]  = []\r\n  okToCompleteOrdinatesForm:boolean = false;\r\n  okToCompleteMatrixForm:boolean = true;\r\n  matrixSingular:boolean = false;\r\n\r\n  showPreview: boolean = false;  // Controls visibility of the preview window\r\n  previewValue: string = '';  // The value displayed in the preview\r\n  previewPositionX: number = 0;  // X-coordinate for positioning\r\n  previewPositionY: number = 0;  // Y-coordinate for positioning\r\n  previewTimeout: any;  // Timeout reference for auto-hiding\r\n\r\n\r\n // ordinatesForm!: FormGroup;\r\n  \r\n  profileForm = this.formb.group({\r\n    degree: [''],\r\n  });\r\n\r\n//   matrixform: FormGroup = this.formb.group({\r\n//     row: this.formb.array([])\r\n// });\r\n\r\n ordinatesForm: FormGroup = this.formbOrdinates.group({\r\n  row: this.formbOrdinates.array([])\r\n })\r\n\r\n\r\n  constructor(private fb: FormBuilder, private fbuilder:FormBuilder,  private formb: FormBuilder, private formbOrdinates: FormBuilder,\r\n     private apiService: ApiService) {\r\n    \r\n  }\r\n\r\n   \r\n  ngOnInit(): void {\r\n    this.ordinatesForm.invalid;\r\n    this.degreeForm = this.fb.group({\r\n      degree: [this.degree, \r\n               Validators.required,\r\n               this.degreeValidator()]\r\n    });\r\n\r\n    this.profileForm = this.fb.group({\r\n      degree: ['']\r\n    });\r\n\r\n\r\n    this.matrixForm = this.formb.group({});\r\n    for (let i = 0; i < this.degree; i++) {\r\n      for (let j = 0; j < this.degree; j++) {\r\n          const controlName = `cell${i}_${j}`;\r\n          this.matrixForm.addControl(controlName, new FormControl('', [\r\n              Validators.required,\r\n              Validators.pattern(/^-?\\d+(\\.\\d+)?$/),// Only numeric values alowed \r\n              this.expressionValidator() \r\n          ]));\r\n      }\r\n  }\r\n\r\n    this.ordinatesForm = this.formb.group({});\r\n    for (let i = 0; i < this.degree; i++) {\r\n      {\r\n        this.ordinatesForm.addControl('ordin' + i , new FormControl(''));\r\n      }\r\n    }\r\n\r\n    this.matrixForm.valueChanges.subscribe(() => {  \r\n      //if(this.okToCompleteMatrixForm && !this.okToCompleteOrdinatesForm)\r\n        this.okToCompleteOrdinatesForm = false;\r\n    });\r\n\r\n  }\r\n    \r\n  private updateMatrixSize(degree: number): void {\r\n    this.rows = Array.from({length: degree}, (_, i) => i);\r\n    this.cols = Array.from({length: degree}, (_, i) => i);\r\n  \r\n    // Reset and rebuild the matrix form based on new degree\r\n    this.matrixForm = this.formb.group({});\r\n    for (let i = 0; i < degree; i++) {\r\n      for (let j = 0; j < degree; j++) {\r\n        this.matrixForm.addControl(`cell${i}_${j}`, new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(/^-?\\d+(\\.\\d+)?$/),\r\n          this.expressionValidator()\r\n        ]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  private updateOrdinatesSize(degree: number): void {\r\n    // Reset and rebuild the ordinates form based on new degree\r\n    this.ordinatesForm = this.formb.group({});\r\n    for (let i = 0; i < degree; i++) {\r\n      this.ordinatesForm.addControl(`ordin${i}`, new FormControl('', Validators.required));\r\n    }\r\n  }\r\n\r\n    // onSubmit1(): void {\r\n    //   const formData = this.profileForm.value;\r\n    //   this.apiService.postDegreeData(formData).subscribe({\r\n    //     next:response => console.log('ResponseDegree:', response),\r\n    //     error: error => console.error('Error:', error)\r\n    //   });\r\n    // }\r\n\r\n    onSubmit1(): void {\r\n      const degreeControl = this.profileForm.get('degree');\r\n      \r\n    \r\n    if (degreeControl) {\r\n        const value = degreeControl.value ?? '';\r\n        const newDegree = parseInt(value, 10);  // ✅ Convert to integer\r\n\r\n        if (!isNaN(newDegree) && newDegree >= this.minSize && newDegree <= this.maxSize) {\r\n            this.degree = newDegree;\r\n            this.updateMatrixSize(newDegree);\r\n            this.updateOrdinatesSize(newDegree);\r\n        } else {\r\n            console.error(\"Invalid degree value:\", degreeControl.value);\r\n        }\r\n    }\r\n      // Extract the degree directly from the form control.\r\n      // const degreeControl = this.profileForm.get('degree');\r\n      // const newDegree = degreeControl ? +degreeControl.value! : 0;\r\n      // if (newDegree >= this.minSize && newDegree <= this.maxSize)  {\r\n      //   this.degree = newDegree;\r\n      //   this.updateMatrixSize(newDegree);\r\n      //   this.updateOrdinatesSize(newDegree);\r\n      // }\r\n    }\r\n\r\n    submitMatrixForm():void {\r\n      if (this.matrixForm.valid) {\r\n        // Proceed with submission\r\n        this.matrixSingular = false;\r\n      } else {\r\n        // Handle invalid form, e.g., by marking all fields as touched to show errors\r\n        this.matrixForm.markAllAsTouched();\r\n        console.log('Invalid matrix');\r\n      }\r\n      const matrixData = this.matrixForm.value;\r\n\r\n      // Convert all matrix values to numbers\r\n      Object.keys(matrixData).forEach(key => {\r\n        matrixData[key] = matrixData[key] !== '' ? parseFloat(matrixData[key]) : null;\r\n    });\r\n\r\n    console.log('Processed matrix data:', matrixData);\r\n\r\n      console.log(this.matrixForm.value);\r\n      if (this.matrixForm.valid) {\r\n        this.matrixForm.disable();\r\n        this.okToCompleteOrdinatesForm = true;\r\n        this.okToCompleteMatrixForm = false;\r\n        // Process the valid form data\r\n        this.apiService.postMatrixData(matrixData).subscribe({\r\n          next: response => console.log('ResponseMatrix:', response),\r\n          error: error => {\r\n            console.log('error in submiting matrix -', error);\r\n            if (error.error && error.error.error === 'Matrix is singular, cannot proceed') {\r\n              // If the error is specifically because the matrix is singular\r\n              this.matrixForm.setErrors({ 'singularMatrix': 'Matrix is singular, cannot proceed' });\r\n              this.matrixSingular = true;\r\n              //this.okToCompleteOrdinatesForm = false;\r\n            } \r\n            this.matrixForm.setErrors({ 'backend': error.error.error });\r\n          }\r\n        });\r\n      } \r\n      else {    \r\n         this.matrixForm.markAllAsTouched();\r\n         console.log('Invalid matrix');\r\n      }\r\n    }\r\n\r\n    submitOrdinatesForm():void {\r\n        const ordinatesData = this.ordinatesForm.value;\r\n          // Convert all ordinates to numbers\r\n          Object.keys(ordinatesData).forEach(key => {\r\n            ordinatesData[key] = ordinatesData[key] !== '' ? parseFloat(ordinatesData[key]) : null;\r\n          });\r\n        console.log('Processed ordinates data:', ordinatesData);\r\n\r\n        if (this.ordinatesForm.valid && this.okToCompleteOrdinatesForm){\r\n          this.matrixForm.enable();\r\n          this.okToCompleteOrdinatesForm = false;\r\n          this.okToCompleteMatrixForm = true;\r\n        }\r\n        console.log('ordinates in submitOrdinatesForm = ', this.ordinatesForm.value);\r\n        console.log('matrix in submitOrdinatesForm = ', this.matrixForm.value);\r\n        if (this.matrixForm.errors?.['singularMatrix']) this.okToCompleteMatrixForm = true;\r\n        this.apiService.postOrdinatesData(ordinatesData).subscribe({\r\n           next: response => { \r\n                               console.log('ResponseOrdinates:', response.solution);\r\n                               this.results = [...response.solution];\r\n                            },\r\n                           \r\n           error: error => console.error('Error:', error)\r\n        })\r\n\r\n    }\r\n    \r\n    safeEvaluate(expression: string): number | null {\r\n      try {\r\n        // Placeholder for safe evaluation logic\r\n        // e.g., using math.js: return math.evaluate(expression);\r\n        return eval(expression); // Note: Using eval() as a placeholder, not recommended for production\r\n      } catch {\r\n        return null; // Indicate failure to evaluate\r\n      }\r\n    }\r\n\r\n    expressionValidator(): ValidatorFn {\r\n      return (control: AbstractControl): ValidationErrors | null => {\r\n        const result = this.safeEvaluate(control.value); // Use the safe evaluation function\r\n        if (result === null || isNaN(result)) {\r\n          return { 'expressionInvalid': true };\r\n        }\r\n        return null; // If the expression is valid and evaluates to a number\r\n      };\r\n    }\r\n\r\n    degreeValidator(): ValidatorFn {\r\n      return (control: AbstractControl): ValidationErrors | null => {\r\n        const result = control.value;\r\n        if (result < this.minSize || result > this.maxSize ){\r\n          return {'expressionInvalid' : true}\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n\r\n    onFieldBlur(controlName: string): void {\r\n      const control = this.matrixForm.get(controlName);\r\n      if (control && !control.valid) {\r\n        \r\n        // The control is invalid after the user leaves the field\r\n        // Here, you can implement any logic you need to signal the error to the user\r\n        // For example, you could set a flag to show an error message next to the field\r\n      }\r\n    }\r\n       \r\n    showCellPreview(event: FocusEvent, fieldName: string, value: any): void {\r\n      this.showPreview = true;\r\n      this.previewValue = value || '';  // Display value (empty if none)\r\n\r\n      // Get the target input field's position\r\n      const target = event.target as HTMLElement;\r\n      const rect = target.getBoundingClientRect();\r\n      \r\n      // Position the preview above the input field\r\n      this.previewPositionX = rect.left + window.scrollX - 10;\r\n      this.previewPositionY = rect.top + window.scrollY - 60;\r\n\r\n      // Clear any existing timeout to prevent premature hiding\r\n      clearTimeout(this.previewTimeout);\r\n\r\n      // Hide ONLY the preview window after 3 seconds (inputs stay visible)\r\n      this.previewTimeout = setTimeout(() => {\r\n          this.hidePreviewOnly();\r\n      }, 3000);\r\n  }\r\n\r\n  // Hide the floating preview window (but NOT the input fields)\r\n  hidePreviewOnly(): void {\r\n      this.showPreview = false;\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div class=\"forms-container\">\r\n    <div class=\"form-profile\">\r\n        <form  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit1()\" class=\"profile\" novalidate >\r\n            <label name= \"degree\"></label>\r\n            <input type=\"tel\"    \r\n                   formControlName = \"degree\" \r\n                   name=\"degree\" \r\n                   class =\"form-control round\" \r\n                   (focus)=\"showCellPreview($event, 'degree', profileForm.get('degree')?.value)\"\r\n                   placeholder=\"degree\">\r\n          \r\n            <div *ngIf=\"profileForm?.touched && profileForm?.errors?.['expressionInvalid']\"\r\n                  class=\"alert alert-danger\">\r\n                         degree must be an integer between 2 and 7\r\n            </div>\r\n         \r\n            <button [disabled]=\"profileForm.invalid\" class=\"btn btn-secondary button_profile\">Enter</button>\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"floating-preview\" *ngIf=\"showPreview\" [ngStyle]=\"{'top': previewPositionY + 'px', 'left': previewPositionX + 'px'}\">\r\n        <span class=\"preview-text\">{{ previewValue }}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"profileForm.value && profileForm.dirty\" class=\"form-matrix matrix-direction\" >\r\n        <form [formGroup]=\"matrixForm\" (ngSubmit)=\"submitMatrixForm()\">\r\n            \r\n                <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row\">\r\n                    <div *ngFor=\"let col of cols; let j = index\" class=\"matrix-cell\">\r\n                        <div class=\"cell-container\">\r\n                            <input  type=\"tel\"\r\n                                    [formControlName]=\"'cell' + i + '_' + j\" \r\n                                    class=\"cell-input\"\r\n                                    id=\"cell\"\r\n                                    (blur)=\"onFieldBlur('cell' + i + '_' + j)\"\r\n                                    (focus)=\"showCellPreview($event, 'cell' + i + '_' + j, matrixForm.get('cell' + i + '_' + j)?.value)\"\r\n                                    required>\r\n                            <span>\r\n                              <label for=\"cell\" class=\"badge bg-secondary bgcell\" > x{{j+1}}</label>\r\n                            </span>\r\n                            <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\" class=\"error-message\"> \r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.touched && matrixForm.get('cell' + i + '_' + j)?.errors?.['expressionInvalid']\"\r\n                                  class=\"alert alert-danger\">\r\n                                    Numbers only!\r\n                                </div>\r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['required']\">Cell is required.</div>\r\n                                <div *ngIf=\"matrixForm.get('cell' + i + '_' + j)?.errors?.['pattern']\">Only numbers are allowed!</div>\r\n                            </div>\r\n                           \r\n                            <div [class]=\"j < cols.length - 1 ? 'plusSign' : 'plusSign hiddenPlus'\">+</div>\r\n                            \r\n                            <!--<div *ngIf=\"j < degree-1 \" class=\"plusSign\">+</div>-->\r\n                        </div>\r\n                    </div> <span class=\"equalSign\">=</span> \r\n                </div>\r\n                <div *ngIf=\"matrixForm.errors?.['backend']\" class=\"alert alert-dark error-message\" role=\"alert\" >\r\n                    {{ matrixForm.errors?.['backend'] }}\r\n                </div>\r\n                <button *ngIf=\"matrixForm.dirty && matrixForm.valid\" \r\n                        [disabled]=\"matrixForm.invalid && (!this.okToCompleteMatrixForm || !matrixForm.errors?.['singularMatrix'])\"\r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary buttonwidth buttonsMargin\"\r\n                >Submit matrix</button>\r\n        </form>\r\n        \r\n            <form [formGroup]=\"ordinatesForm\"  (ngSubmit) = \"submitOrdinatesForm()\" class=\"form-matrix ordinates-direction\">  <!--form-ordinates   ordinates-row-->\r\n                <div *ngFor=\"let row of rows; let i = index\" class=\"matrix-row\" > <!--ordinates-row              form-control rounded ordinates-cell-->\r\n                    <div class=\"matrix-cell\">\r\n                        <div class=\"cell-container\">\r\n                            <div class=\"cell-input\">\r\n                                \r\n                              <input type =\"tel\"   \r\n                                     [formControlName]=\"'ordin'+ i\" \r\n                                     class=\"input-ordinate\" \r\n                                     (focus)=\"showCellPreview($event, 'ordin' + i, ordinatesForm.get('ordin' + i)?.value)\"\r\n                                     required />\r\n                              <span><label class=\"badge bg-secondary bgcell\"></label>x</span>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button *ngIf=\"ordinatesForm.dirty && ordinatesForm.valid && !okToCompleteMatrixForm && !matrixForm.errors?.['singularMatrix']\" \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary blink_me\" \r\n                        [disabled]=\"!this.ordinatesForm.valid\"\r\n                >\r\n                  {{ this.matrixForm.errors ? 'Change matrix' : 'See result'}}    \r\n                </button>\r\n            </form>\r\n        \r\n    </div>\r\n    \r\n\r\n    <div *ngIf=\"ordinatesForm.dirty && ordinatesForm.valid && \r\n        matrixForm.dirty && matrixForm.valid && !matrixSingular && okToCompleteMatrixForm\" class=\"badge text-left container\">\r\n        <div name=\"response\" class=\"solution_elements\" >\r\n           \r\n            The solution is: \r\n            <span *ngFor=\"let result of results; let i = index\">\r\n                <div>\r\n                        x{{i+1}}={{result| number:'1.0-4'}}{{i < results.length - 1 ? '' : ''}}\r\n                </div>        \r\n            </span> \r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}